{"version":3,"file":"index.2e215246.js","sources":["../../../../components/declension-preview.vue","../../../../components/preview-banner.vue","../../../../components/copy-button.vue","../../../../components/share-links.vue","../../../../composables/declension.ts","../../../../components/declension-form.vue","../../../../components/declension-results.vue","../../../../components/declension-demo.vue","../../../../components/how-it-works.vue","../../../../components/installation-instructions.vue","../../../../components/usage-example.vue","../../../../components/api-spec.vue","../../../../components/library-docs.vue","../../../../components/contact-me-modal.vue","../../../../components/about-modal.vue","../../../../composables/page-i18n.ts","../../../../pages/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { useIntervalFn } from '@vueuse/core';\nimport * as shevchenko from 'shevchenko';\n\nconst anthroponyms: shevchenko.Anthroponym[] = [\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Шевченко',\n    firstName: 'Тарас',\n    middleName: 'Григорович',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Франко',\n    firstName: 'Іван',\n    middleName: 'Якович',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Нечуй-Левицький',\n    firstName: 'Іван',\n    middleName: 'Семенович',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Рудченко',\n    firstName: 'Панас',\n    middleName: 'Якович',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Рудченко',\n    firstName: 'Іван',\n    middleName: 'Якович',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: \"Лозов'яга\",\n    firstName: 'Іван',\n    middleName: 'Павлович',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Котляревський',\n    firstName: 'Іван',\n    middleName: 'Петрович',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Сосюра',\n    firstName: 'Володимир',\n    middleName: 'Миколайович',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Тичина',\n    firstName: 'Павло',\n    middleName: 'Григорович',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Симоненко',\n    firstName: 'Василь',\n    middleName: 'Андрійович',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Фітільов',\n    firstName: 'Микола',\n    middleName: 'Григорович',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Коцюбинський',\n    firstName: 'Михайло',\n    middleName: 'Михайлович',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Сковорода',\n    firstName: 'Григорій',\n    middleName: 'Савич',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Куліш',\n    firstName: 'Пантелеймон',\n    middleName: 'Олександрович',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Глібов',\n    firstName: 'Леонід',\n    middleName: 'Іванович',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Гончар',\n    firstName: 'Олександр',\n    middleName: 'Терентійович',\n  },\n  {\n    gender: shevchenko.Gender.Male,\n    lastName: 'Довженко',\n    firstName: 'Олександр',\n    middleName: 'Петрович',\n  },\n  {\n    gender: shevchenko.Gender.Female,\n    lastName: 'Косач-Квітка',\n    firstName: 'Лариса',\n    middleName: 'Петрівна',\n  },\n  {\n    gender: shevchenko.Gender.Female,\n    lastName: 'Косач',\n    firstName: 'Ольга',\n    middleName: 'Петрівна',\n  },\n  {\n    gender: shevchenko.Gender.Female,\n    lastName: 'Вілінська',\n    firstName: 'Марія',\n    middleName: 'Олександрівна',\n  },\n  {\n    gender: shevchenko.Gender.Female,\n    lastName: 'Кобилянська',\n    firstName: 'Ольга',\n    middleName: 'Юліанівна',\n  },\n];\n\nconst anthroponym = ref(shevchenko.inVocative(anthroponyms[0]));\n\n// Shuffle the array of anthroponyms before the preview.\nanthroponyms.sort(() => (Math.random() > 0.5 ? 1 : -1));\n\nlet index = 0;\nfunction previewNextAnthroponym(): void {\n  index = index + 1;\n  if (index > anthroponyms.length - 1) {\n    index = 0;\n  }\n  anthroponym.value = shevchenko.inVocative(anthroponyms[index]);\n}\n\nuseIntervalFn(previewNextAnthroponym, 5_000);\n</script>\n\n<template>\n  <transition name=\"preview\" mode=\"out-in\">\n    <span :key=\"`${anthroponym.firstName}${anthroponym.middleName}${anthroponym.lastName}`\">\n      {{ anthroponym.firstName }} {{ anthroponym.middleName }} {{ anthroponym.lastName }}\n    </span>\n  </transition>\n</template>\n\n<style scoped>\n.preview-enter-active,\n.preview-leave-active {\n  transition: opacity 0.4s;\n}\n\n.preview-enter,\n.preview-leave-active {\n  opacity: 0;\n}\n</style>\n","<script setup>\nconst appConfig = useAppConfig();\n</script>\n\n<template>\n  <section id=\"preview\" class=\"jumbotron my-3\">\n    <h1 class=\"text-truncate\">\n      {{ appConfig.library.name }}\n      <span class=\"d-none d-lg-inline\">\n        <small class=\"text-muted\"><DeclensionPreview :aria-hidden=\"true\" /></small>\n      </span>\n    </h1>\n\n    <p>\n      {{ $t('app.name') }}\n    </p>\n\n    <p>\n      <NuxtLink class=\"btn btn-lg btn-primary\" :to=\"{ hash: '#demo' }\" role=\"button\">\n        {{ $t('demo') }}\n      </NuxtLink>\n\n      <NuxtLink\n        class=\"btn btn-lg btn-link text-decoration-none\"\n        :to=\"{ hash: '#usage-example' }\"\n        role=\"button\"\n      >\n        {{ $t('usageExample') }}\n      </NuxtLink>\n    </p>\n  </section>\n</template>\n","<script setup lang=\"ts\">\nimport { useClipboard } from '@vueuse/core';\nimport { computed, toRefs } from 'vue';\n\nconst props = defineProps({\n  source: { type: String, required: true },\n  trim: { type: Boolean, default: true },\n  buttonId: { type: String, required: false },\n  buttonClass: { type: String, default: 'btn btn-btn btn-link py-0 px-1' },\n  buttonTitle: { type: String, default: null },\n  iconClass: { type: String, default: 'fa fa-clipboard' },\n});\n\nconst { source, trim } = toRefs(props);\n\nconst modifiedSource = computed(() => {\n  return trim.value ? source.value.trim() : source.value;\n});\n\nconst { copy, copied } = useClipboard({\n  source: modifiedSource,\n  legacy: true,\n});\n</script>\n\n<template>\n  <button\n    type=\"button\"\n    :title=\"buttonTitle ?? $t('action.copy')\"\n    :aria-label=\"$t('action.copy')\"\n    @click=\"copy()\"\n    :id=\"buttonId\"\n    :class=\"buttonClass\"\n  >\n    <i v-if=\"copied\" aria-hidden=\"true\" class=\"fa fa-check\"></i>\n    <i v-else aria-hidden=\"true\" :class=\"iconClass\"></i>\n  </button>\n</template>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { useRouteUtils } from '~/composables/route-utils';\n\ndefineProps({\n  buttonsClass: { type: String, default: null },\n});\n\nconst { t: $t } = useI18n();\nconst { pageUrl } = useRouteUtils();\n\nconst pageShareLink = computed(() => pageUrl.value);\n\nconst facebookShareLink = computed(() => {\n  const shareLink = new URL('https://www.facebook.com');\n  shareLink.pathname = '/sharer/sharer.php';\n  shareLink.searchParams.set('u', pageShareLink.value);\n  return shareLink.toString();\n});\n\nconst twitterShareLink = computed(() => {\n  const shareLink = new URL('https://twitter.com');\n  shareLink.pathname = '/home';\n  shareLink.searchParams.set('status', pageShareLink.value);\n  return shareLink.toString();\n});\n\nconst linkedInShareLink = computed(() => {\n  const shareLink = new URL('https://www.linkedin.com');\n  shareLink.pathname = '/shareArticle';\n  shareLink.searchParams.set('mini', true.toString());\n  shareLink.searchParams.set('url', pageShareLink.value);\n  shareLink.searchParams.set('title', '');\n  shareLink.searchParams.set('summary', $t('app.name').toString());\n  shareLink.searchParams.set('source', '');\n  return shareLink.toString();\n});\n</script>\n\n<template>\n  <div class=\"btn-group\" :class=\"buttonsClass\" role=\"menubar\">\n    <CopyButton\n      :source=\"pageShareLink\"\n      button-class=\"btn btn-lg btn-link btn--share\"\n      :button-title=\"$t('action.copyLink')\"\n      icon-class=\"fa fa-link\"\n    />\n\n    <a\n      class=\"btn btn-lg btn-link btn--share\"\n      :href=\"facebookShareLink\"\n      :title=\"$t('action.share.onFacebook')\"\n      target=\"_blank\"\n      role=\"menuitem\"\n    >\n      <i class=\"fa fa-facebook fa-facebook--branded\" aria-hidden=\"true\"></i>\n    </a>\n\n    <a\n      class=\"btn btn-lg btn-link btn--share\"\n      :href=\"twitterShareLink\"\n      :title=\"$t('action.share.onTwitter')\"\n      target=\"_blank\"\n      role=\"menuitem\"\n    >\n      <i class=\"fa fa-twitter fa-twitter--branded\" aria-hidden=\"true\"></i>\n    </a>\n\n    <a\n      class=\"btn btn-lg btn-link btn--share\"\n      :href=\"linkedInShareLink\"\n      :title=\"$t('action.share.onLinkedIn')\"\n      target=\"_blank\"\n      role=\"menuitem\"\n    >\n      <i class=\"fa fa-linkedin fa-linkedin--branded\" aria-hidden=\"true\"></i>\n    </a>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.btn {\n  &--share {\n    width: 45px;\n    border: 0;\n    text-align: center;\n  }\n}\n\n.fa-facebook {\n  &--branded {\n    color: #4867aa;\n  }\n}\n\n.fa-twitter {\n  &--branded {\n    color: #1da1f2;\n  }\n}\n\n.fa-linkedin {\n  &--branded {\n    color: #0077b5;\n  }\n}\n</style>\n","import { createSharedComposable } from '@vueuse/core';\nimport { reactive } from 'vue';\nimport {\n  Anthroponym,\n  Gender,\n  inNominative,\n  inGenitive,\n  inDative,\n  inAccusative,\n  inAblative,\n  inLocative,\n  inVocative,\n} from 'shevchenko';\nimport maleFirstNames from '~/data/male-first-names.json';\nimport femaleFirstNames from '~/data/female-first-names.json';\n\nexport type GenderlessAnthroponym = Omit<Anthroponym, 'gender'>;\n\nexport const shevchenkoAnthroponym: Anthroponym = {\n  gender: Gender.Male,\n  lastName: 'Шевченко',\n  firstName: 'Тарас',\n  middleName: 'Григорович',\n};\n\nexport interface DeclensionResults {\n  nominativeCase: Anthroponym;\n  genitiveCase: Anthroponym;\n  dativeCase: Anthroponym;\n  accusativeCase: Anthroponym;\n  ablativeCase: Anthroponym;\n  locativeCase: Anthroponym;\n  vocativeCase: Anthroponym;\n}\n\n/**\n * Returns true if the given anthroponym is correctly defined.\n * Returns false otherwise.\n */\nexport function isDefinedAnthroponym(\n  anthroponym: Partial<Anthroponym>,\n): anthroponym is Anthroponym {\n  return Boolean(\n    anthroponym.gender &&\n    Object.values(Gender).includes(anthroponym.gender) &&\n    (anthroponym.firstName || anthroponym.middleName || anthroponym.lastName),\n  );\n}\n\nexport function isShevchenkoAnthroponym(anthroponym: Partial<Anthroponym>): boolean {\n  return (\n    anthroponym.gender === shevchenkoAnthroponym.gender &&\n    anthroponym.lastName === shevchenkoAnthroponym.lastName &&\n    anthroponym.firstName === shevchenkoAnthroponym.firstName &&\n    anthroponym.middleName === shevchenkoAnthroponym.middleName\n  );\n}\n\nexport const useDeclension = createSharedComposable((predefinedAnthroponym: Anthroponym) => {\n  let anthroponym: Anthroponym = reactive({\n    gender: Gender.Male,\n    lastName: '',\n    firstName: '',\n    middleName: '',\n  });\n\n  let initialAnthroponym: Anthroponym = reactive(shevchenkoAnthroponym);\n  if (isDefinedAnthroponym(predefinedAnthroponym)) {\n    initialAnthroponym = reactive(predefinedAnthroponym);\n    anthroponym = reactive(predefinedAnthroponym);\n  }\n\n  const declensionResults: DeclensionResults = reactive({\n    nominativeCase: inNominative(initialAnthroponym),\n    genitiveCase: inGenitive(initialAnthroponym),\n    dativeCase: inDative(initialAnthroponym),\n    accusativeCase: inAccusative(initialAnthroponym),\n    ablativeCase: inAblative(initialAnthroponym),\n    locativeCase: inLocative(initialAnthroponym),\n    vocativeCase: inVocative(initialAnthroponym),\n  });\n\n  function setAnthroponym(source: Anthroponym): void {\n    anthroponym.gender = source.gender;\n    anthroponym.lastName = source.lastName;\n    anthroponym.firstName = source.firstName;\n    anthroponym.middleName = source.middleName;\n  }\n\n  function inflect(source: Anthroponym): void {\n    setAnthroponym(source);\n    declensionResults.nominativeCase = inNominative(anthroponym);\n    declensionResults.genitiveCase = inGenitive(anthroponym);\n    declensionResults.dativeCase = inDative(anthroponym);\n    declensionResults.accusativeCase = inAccusative(anthroponym);\n    declensionResults.ablativeCase = inAblative(anthroponym);\n    declensionResults.locativeCase = inLocative(anthroponym);\n    declensionResults.vocativeCase = inVocative(anthroponym);\n  }\n\n  function detectGender(anthroponym: GenderlessAnthroponym): Gender | null {\n    if (anthroponym.middleName) {\n      const middleName = anthroponym.middleName.replace(/[`\"]/g, \"'\").toLocaleLowerCase();\n      if (/(и|і)ч$/.test(middleName)) {\n        return Gender.Male;\n      } else if (/на$/.test(middleName)) {\n        return Gender.Female;\n      }\n    }\n\n    if (anthroponym.firstName) {\n      const firstName = anthroponym.firstName.replace(/[`\"]/g, \"'\").toLocaleLowerCase();\n      if (maleFirstNames.includes(firstName)) {\n        return Gender.Male;\n      } else if (femaleFirstNames.includes(firstName)) {\n        return Gender.Female;\n      }\n    }\n\n    return null;\n  }\n\n  return { anthroponym, declensionResults, inflect, detectGender };\n});\n","<script setup lang=\"ts\">\nimport { useToggle } from '@vueuse/core';\nimport { Anthroponym, Gender } from 'shevchenko';\nimport { onMounted, PropType, toRefs } from 'vue';\nimport {\n  shevchenkoAnthroponym,\n  useDeclension,\n  isShevchenkoAnthroponym,\n} from '~/composables/declension';\n\nconst props = defineProps({\n  initialAnthroponym: { type: Object as PropType<Anthroponym>, default: () => ({}) },\n});\n\nconst { initialAnthroponym } = toRefs(props);\n\nconst emit = defineEmits(['declension']);\n\nconst { anthroponym, detectGender, inflect } = useDeclension(initialAnthroponym.value);\nconst [isGenderError, showGenderError] = useToggle(false);\n\nconst AutoGender = undefined;\nconst genderOptions = [AutoGender, ...Object.values(Gender)];\n\ninterface FormData {\n  gender: Gender | typeof AutoGender;\n  firstName?: string;\n  lastName?: string;\n  middleName?: string;\n}\n\nconst formData: FormData = {\n  gender: AutoGender,\n  firstName: '',\n  lastName: '',\n  middleName: '',\n};\n\nfunction setFormData(data: FormData): void {\n  formData.gender = data.gender;\n  formData.firstName = data.firstName;\n  formData.lastName = data.lastName;\n  formData.middleName = data.middleName;\n}\n\nonMounted(() => {\n  if (!isShevchenkoAnthroponym(initialAnthroponym.value)) {\n    setFormData(initialAnthroponym.value);\n  }\n});\n\nfunction onInflect(): void {\n  let { gender, firstName, lastName, middleName } = formData;\n\n  if (gender == null) {\n    gender = detectGender({ firstName, lastName, middleName }) ?? AutoGender;\n    if (gender == null) {\n      showGenderError(true);\n      return;\n    }\n  }\n\n  showGenderError(false);\n  inflect({ gender, firstName, lastName, middleName });\n  emit('declension', anthroponym);\n}\n</script>\n\n<template>\n  <form id=\"declension-form\" @submit.prevent=\"onInflect\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"alert alert-info\" role=\"alert\">\n          {{ $t('declensionForm.instructionMessage') }}\n        </div>\n\n        <div class=\"form-group\">\n          <label\n            class=\"radio-inline mr-2\"\n            v-for=\"genderOption in genderOptions\"\n            :key=\"genderOption\"\n            :title=\"$t('gender.message.autoDetection')\"\n          >\n            <input v-model=\"formData.gender\" type=\"radio\" name=\"gender\" :value=\"genderOption\" />\n            {{ $t(`gender.${genderOption}`) }}\n            <span v-if=\"genderOption === AutoGender\">\n              ({{ $t(`gender.${anthroponym.gender}`) }})\n            </span>\n          </label>\n\n          <small\n            v-if=\"isGenderError\"\n            v-show=\"formData.gender === AutoGender\"\n            class=\"form-text text-danger\"\n          >\n            {{ $t('gender.message.detectionFailed') }}\n          </small>\n\n          <small v-else class=\"form-text text-muted\">\n            {{ $t('gender.message.autoDetection') }}\n          </small>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"last-name\">\n            {{ $t('anthroponym.lastName') }}\n          </label>\n          <input\n            v-model.trim=\"formData.lastName\"\n            type=\"text\"\n            class=\"form-control\"\n            name=\"last-name\"\n            id=\"last-name\"\n            :placeholder=\"shevchenkoAnthroponym.lastName\"\n          />\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"first-name\">\n            {{ $t('anthroponym.firstName') }}\n          </label>\n          <input\n            v-model.trim=\"formData.firstName\"\n            type=\"text\"\n            class=\"form-control\"\n            name=\"first-name\"\n            id=\"first-name\"\n            :placeholder=\"shevchenkoAnthroponym.firstName\"\n          />\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"middle-name\">\n            {{ $t('anthroponym.middleName') }}\n          </label>\n          <input\n            v-model.trim=\"formData.middleName\"\n            type=\"text\"\n            class=\"form-control\"\n            name=\"middle-name\"\n            id=\"middle-name\"\n            :placeholder=\"shevchenkoAnthroponym.middleName\"\n          />\n        </div>\n      </div>\n\n      <div class=\"card-footer\">\n        <button type=\"submit\" class=\"btn btn-primary\">\n          {{ $t('action.inflect') }}\n        </button>\n\n        <ContactMeButton button-class=\"btn btn-link pull-right\">\n          {{ $t('foundBug') }}\n        </ContactMeButton>\n      </div>\n    </div>\n  </form>\n</template>\n","<script setup lang=\"ts\">\nimport { useDeclension } from '~/composables/declension';\nimport { Anthroponym } from 'shevchenko';\n\nconst { declensionResults } = useDeclension();\n\nfunction convertAnthroponymToString(anthroponym: Anthroponym): string {\n  let output: string[] = [];\n\n  if (anthroponym.lastName) {\n    output.push(anthroponym.lastName);\n  }\n\n  if (anthroponym.firstName) {\n    output.push(anthroponym.firstName);\n  }\n\n  if (anthroponym.middleName) {\n    output.push(anthroponym.middleName);\n  }\n\n  return output.join(' ');\n}\n</script>\n\n<template>\n  <table class=\"table table-responsive-md m-0\">\n    <tr class=\"bg-light\">\n      <th class=\"border-top-0\">{{ $t('grammaticalCase') }}</th>\n      <th class=\"border-top-0\">{{ $t('anthroponym.lastName') }}</th>\n      <th class=\"border-top-0\">{{ $t('anthroponym.firstName') }}</th>\n      <th class=\"border-top-0\">{{ $t('anthroponym.middleName') }}</th>\n      <th class=\"border-top-0\">\n        <span class=\"py-0 px-1\">\n          <i\n            class=\"fa fa-info-circle\"\n            :title=\"$t('declensionForm.copyMessage')\"\n            :aria-label=\"$t('declensionForm.copyMessage')\"\n          ></i>\n        </span>\n      </th>\n    </tr>\n\n    <tr>\n      <th>{{ $t('grammaticalCase.nominative') }}</th>\n      <td>{{ declensionResults.nominativeCase.lastName }}</td>\n      <td>{{ declensionResults.nominativeCase.firstName }}</td>\n      <td>{{ declensionResults.nominativeCase.middleName }}</td>\n      <td>\n        <CopyButton\n          :button-id=\"'copy-nominative-case-button'\"\n          :source=\"convertAnthroponymToString(declensionResults.nominativeCase)\"\n        />\n      </td>\n    </tr>\n\n    <tr>\n      <th>{{ $t('grammaticalCase.genitive') }}</th>\n      <td>{{ declensionResults.genitiveCase.lastName }}</td>\n      <td>{{ declensionResults.genitiveCase.firstName }}</td>\n      <td>{{ declensionResults.genitiveCase.middleName }}</td>\n      <td>\n        <CopyButton\n          :button-id=\"'copy-genitive-case-button'\"\n          :source=\"convertAnthroponymToString(declensionResults.genitiveCase)\"\n        />\n      </td>\n    </tr>\n\n    <tr>\n      <th>{{ $t('grammaticalCase.dative') }}</th>\n      <td>{{ declensionResults.dativeCase.lastName }}</td>\n      <td>{{ declensionResults.dativeCase.firstName }}</td>\n      <td>{{ declensionResults.dativeCase.middleName }}</td>\n      <td>\n        <CopyButton\n          :button-id=\"'copy-dative-case-button'\"\n          :source=\"convertAnthroponymToString(declensionResults.dativeCase)\"\n        />\n      </td>\n    </tr>\n\n    <tr>\n      <th>{{ $t('grammaticalCase.accusative') }}</th>\n      <td>{{ declensionResults.accusativeCase.lastName }}</td>\n      <td>{{ declensionResults.accusativeCase.firstName }}</td>\n      <td>{{ declensionResults.accusativeCase.middleName }}</td>\n      <td>\n        <CopyButton\n          :button-id=\"'copy-accusative-case-button'\"\n          :source=\"convertAnthroponymToString(declensionResults.accusativeCase)\"\n        />\n      </td>\n    </tr>\n\n    <tr>\n      <th>{{ $t('grammaticalCase.ablative') }}</th>\n      <td>{{ declensionResults.ablativeCase.lastName }}</td>\n      <td>{{ declensionResults.ablativeCase.firstName }}</td>\n      <td>{{ declensionResults.ablativeCase.middleName }}</td>\n      <td>\n        <CopyButton\n          :button-id=\"'copy-ablative-case-button'\"\n          :source=\"convertAnthroponymToString(declensionResults.ablativeCase)\"\n        />\n      </td>\n    </tr>\n\n    <tr>\n      <th>{{ $t('grammaticalCase.locative') }}</th>\n      <td>{{ declensionResults.locativeCase.lastName }}</td>\n      <td>{{ declensionResults.locativeCase.firstName }}</td>\n      <td>{{ declensionResults.locativeCase.middleName }}</td>\n      <td>\n        <CopyButton\n          :button-id=\"'copy-locative-case-button'\"\n          :source=\"convertAnthroponymToString(declensionResults.locativeCase)\"\n        />\n      </td>\n    </tr>\n\n    <tr>\n      <th>{{ $t('grammaticalCase.vocative') }}</th>\n      <td>{{ declensionResults.vocativeCase.lastName }}</td>\n      <td>{{ declensionResults.vocativeCase.firstName }}</td>\n      <td>{{ declensionResults.vocativeCase.middleName }}</td>\n      <td>\n        <CopyButton\n          :button-id=\"'copy-vocative-case-button'\"\n          :source=\"convertAnthroponymToString(declensionResults.vocativeCase)\"\n        />\n      </td>\n    </tr>\n  </table>\n</template>\n","<template>\n  <section id=\"demo\" class=\"my-4\">\n    <div class=\"row mb-3\">\n      <div class=\"col-12 col-lg-9\">\n        <h2 class=\"mb-0\">\n          {{ $t('demo') }}\n          <small class=\"d-block h6 text-muted mt-2 mb-0 sentence-capitalize\">\n            {{ $t('demo.message') }}\n          </small>\n        </h2>\n      </div>\n\n      <div class=\"col-12 col-lg-3\">\n        <div class=\"d-flex\">\n          <ShareLinks buttons-class=\"ml-auto\" />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-lg-5 mb-2 mb-lg-0\">\n        <DeclensionForm v-bind=\"$attrs\" />\n      </div>\n\n      <div class=\"col-lg-7\">\n        <div class=\"card mb-2\">\n          <DeclensionResults />\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<style lang=\"scss\" scoped>\n.sentence-capitalize:first-letter {\n  text-transform: capitalize;\n}\n</style>\n","<template>\n  <section v-if=\"$i18n.locale === 'uk-UA'\" id=\"how-it-works\" class=\"my-4\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h2>{{ $t('howItWorks') }}</h2>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"mt-3\">\n          <p>\n            Бібліотека використовує більше вісімдесяти правил для відмінювання прізвищ, імен та по\n            батькові. Правила фільтруються за родом, закінченням, частиною мови, сферою застосування\n            та сортуються за пріоритетом.\n          </p>\n\n          <p>\n            При відмінюванні жіночих прізвищ із закінченнями на -а, -я та чоловічих прізвищ із\n            закінченнями на -ой, -ій, -ий, -их для визначення частини мови слова використовуються\n            нейронні мережі, навчені на більш як сорока тисячах прізвищах. Тому прізвища\n            іменникового та прикметникового походжень відмінюються як іменники та прикметники\n            відповідно, наприклад, Диня (називний) &rarr; Дині (родовий), Синя (називний) &rarr;\n            Синьої (родовий), Рий (називний) &rarr; Рия (родовий), Бурий (називний) &rarr; Бурого\n            (родовий).\n          </p>\n\n          <p>\n            При відмінюванні відбуваються зміни голосних та приголосних звуків згідно з правилами\n            української мови, наприклад, Сивокінь (називний) &rarr; Сивоконя (родовий), Гичка\n            (називний) &rarr; Гичці (давальний), але Чміль (називний) &rarr; Чміля (родовий).\n          </p>\n\n          <p>\n            Складені прізвища, утворені поєднанням двох самостійних прізвищ відмінюються за\n            правилами відмінювання кожної складової частини, наприклад, Нечуй-Левицький (називний) -\n            Нечуя-Левицького (родовий), але Драй-Хмара (називний) — Драй-Хмари (родовий), бо перша\n            коротка частина складеного прізвища є односкладовою та сприймається не як самостійне\n            прізвище, а як приставка до другого компонента.\n          </p>\n\n          <p>\n            Складені імена, утворені поєднанням двох самостійних імен відмінюються згідно з\n            правилами відмінювання кожної складової частини, наприклад, Анна-Марія (називний) -\n            Анни-Марії (родовий).\n          </p>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup lang=\"ts\">\nconst appConfig = useAppConfig();\n\nconst npmInstallCommand = `npm install --save ${appConfig.library.name}`;\nconst nodeRequireCode = `const ${appConfig.library.name} = require(\"${appConfig.library.name}\");`;\nconst browserScriptCode = `<‍script type=\"text/javascript\" src=\"${appConfig.library.cdnUrl}\"><‍/script>`;\n</script>\n\n<template>\n  <div id=\"installation\" class=\"card my-3\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title mb-3\">{{ $t('installation') }}</h5>\n\n      <h6 class=\"card-subtitle mb-2 text-muted\">npm</h6>\n      <div class=\"d-flex align-items-center mb-3\">\n        <pre class=\"mb-0\">{{ npmInstallCommand }}</pre>\n        <CopyButton :source=\"npmInstallCommand\" />\n      </div>\n\n      <h6 class=\"card-subtitle mb-2 text-muted\">Node.js</h6>\n      <div class=\"d-flex align-items-center mb-3\">\n        <pre class=\"mb-0\">{{ nodeRequireCode }}</pre>\n        <CopyButton :source=\"nodeRequireCode\" />\n      </div>\n\n      <h6 class=\"card-subtitle mb-2 text-muted\">{{ $t('browser') }}</h6>\n      <div class=\"d-flex align-items-center mb-3\">\n        <pre class=\"mb-0\">{{ browserScriptCode }}</pre>\n        <CopyButton :source=\"browserScriptCode\" />\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nconst appConfig = useAppConfig();\n\nconst usageExample = `\nconst anthroponym = {\n  gender: 'male', // or 'female'\n  firstName: 'Тарас',\n  middleName: 'Григорович',\n  lastName: 'Шевченко'\n};\n\nconst result = shevchenko.inVocative(anthroponym);\n\nconsole.log(result); // { gender: \"male\", firstName: \"Тарасе\", middleName: \"Григоровичу\", lastName: \"Шевченку\" }\n`;\n</script>\n\n<template>\n  <div id=\"usage-example\" class=\"card my-3\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title mb-3\">\n        {{ $t('usageExample') }}\n        <small\n          ><a :href=\"appConfig.library.runKitUrl\" target=\"_blank\">\n            {{ $t('action.tryItOut') }}\n          </a></small\n        >\n      </h5>\n      <pre class=\"mb-0\">{{ usageExample.trim() }}</pre>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { useI18n } from 'vue-i18n';\n\nconst { t: $t } = useI18n();\n\n// prettier-ignore\nlet apiSpec = `\nshevchenko.inNominative(anthroponym: Anthroponym): Anthroponym; // ${$t('action.inflect.inNominativeCase')}\nshevchenko.inGenitive(anthroponym: Anthroponym): Anthroponym;   // ${$t('action.inflect.inGenitiveCase')}\nshevchenko.inDative(anthroponym: Anthroponym): Anthroponym;     // ${$t('action.inflect.inDativeCase')}\nshevchenko.inAccusative(anthroponym: Anthroponym): Anthroponym; // ${$t('action.inflect.inAccusativeCase')}\nshevchenko.inAblative(anthroponym: Anthroponym): Anthroponym;   // ${$t('action.inflect.inAblativeCase')}\nshevchenko.inLocative(anthroponym: Anthroponym): Anthroponym;   // ${$t('action.inflect.inLocativeCase')}\nshevchenko.inVocative(anthroponym: Anthroponym): Anthroponym;   // ${$t('action.inflect.inVocativeCase')}\n`;\n</script>\n\n<template>\n  <div id=\"api-spec\" class=\"card my-3\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title mb-3\">API</h5>\n      <pre class=\"mb-0\">{{ apiSpec.trim() }}</pre>\n    </div>\n  </div>\n</template>\n","<template>\n  <section id=\"documentation\" class=\"my-4\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <h2>{{ $t('documentation') }}</h2>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <InstallationInstructions />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <UsageExample />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <ApiSpec />\n      </div>\n    </div>\n  </section>\n</template>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport { useI18n } from 'vue-i18n';\n\nconst appConfig = useAppConfig();\nconst { t: $t } = useI18n();\n\nconst mailtoUrl = computed(() => {\n  const url = new URL(`mailto:${appConfig.website.email}`);\n  url.searchParams.set('subject', $t('contactMe.messageSubject').toString());\n  return url.toString();\n});\n</script>\n\n<template>\n  <div\n    id=\"contact-me-modal\"\n    class=\"modal fade\"\n    tabindex=\"-1\"\n    role=\"dialog\"\n    aria-labelledby=\"contact-me-label\"\n  >\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h4 id=\"contact-me-label\" class=\"modal-title\">\n            {{ $t('contactMe.modalTitle') }}\n          </h4>\n\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" :aria-label=\"$t('action.close')\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n\n        <div class=\"modal-body\">\n          <p>\n            {{ $t('contactMe.modalMessage') }}\n          </p>\n\n          <div class=\"input-group mb-3\">\n            <input\n              :value=\"appConfig.website.email\"\n              readonly\n              type=\"email\"\n              class=\"form-control\"\n              :aria-label=\"$t('contactMe.recipientEmail')\"\n            />\n          </div>\n        </div>\n\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ $t('action.close') }}\n          </button>\n\n          <a target=\"_blank\" :href=\"mailtoUrl\" class=\"btn btn-primary\">\n            <i aria-hidden=\"true\" class=\"fa fa-paper-plane\"></i> {{ $t('action.write') }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { onMounted } from 'vue';\n\nconst appConfig = useAppConfig();\nconst route = useRoute();\n\nonMounted(() => {\n  if (route.hash === '#about') {\n    $('#about-modal').modal('show');\n  }\n});\n</script>\n\n<template>\n  <div\n    id=\"about-modal\"\n    class=\"modal fade\"\n    tabindex=\"-1\"\n    role=\"dialog\"\n    aria-labelledby=\"about-label\"\n  >\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h4 id=\"about-label\" class=\"modal-title\">\n            {{ $t('about.modalTitle', { appName: appConfig.library.name }) }}\n          </h4>\n\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" :aria-label=\"$t('action.close')\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n\n        <div class=\"modal-body\">\n          <p>\n            {{ $t('about.modalMessage') }}\n          </p>\n        </div>\n\n        <div class=\"modal-footer\">\n          <nav>\n            <ul class=\"list-unstyled mb-0\" role=\"menubar\">\n              <p class=\"d-inline mr-2 mb-0\">\n                <PageCopyright />\n              </p>\n\n              <p class=\"d-inline mr-2 mb-0\">\n                <ContactMeButton data-dismiss=\"modal\" button-class=\"btn btn-link p-0\">\n                  {{ $t('action.contactMe') }}\n                </ContactMeButton>\n              </p>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import { useI18n } from 'vue-i18n';\nimport type { LocaleName } from '~/plugins/i18n';\n\nexport interface PageI18nOptions {\n  locale: LocaleName;\n}\n\nexport const usePageI18n = (options: PageI18nOptions) => {\n  const { locale } = useI18n();\n  locale.value = options.locale;\n};\n","<script setup lang=\"ts\">\nimport { computed, ref, onMounted } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { usePageI18n } from '~/composables/page-i18n';\nimport { buildPageUrl, useRouteUtils } from '~/composables/route-utils';\nimport { usePageMeta } from '~/composables/page-meta';\nimport { Anthroponym } from 'shevchenko';\n\nusePageI18n({\n  locale: 'uk-UA',\n});\n\nconst appConfig = useAppConfig();\nconst { t: $t } = useI18n();\nconst route = useRoute();\nconst { pageUrl } = useRouteUtils();\nconst router = useRouter();\nconst { buildPageTitle } = usePageMeta();\n\nconst defaultPageTitle = computed(() => {\n  const title = $t('app.name').toString();\n  return buildPageTitle(title);\n});\n\nconst pageTitle = ref(defaultPageTitle.value);\n\nuseHead({\n  title: pageTitle,\n  link: [\n    //\n    { rel: 'canonical', href: buildPageUrl('/') },\n  ],\n  meta: [\n    { property: 'og:image', content: buildPageUrl('/preview-608x608.jpg') },\n    { property: 'og:image:width', content: '608' },\n    { property: 'og:image:height', content: '608' },\n    { property: 'og:type', content: 'website' },\n    { property: 'og:url', content: pageUrl },\n    { property: 'og:site_name', content: appConfig.library.name },\n    { property: 'og:title', content: pageTitle },\n    { property: 'og:description', content: pageTitle },\n    { name: 'twitter:image', content: buildPageUrl('/preview-608x608.jpg') },\n    { name: 'twitter:card', content: 'summary' },\n    { name: 'twitter:title', content: pageTitle },\n  ],\n});\n\nasync function updatePageTitle(anthroponym: Partial<Anthroponym>): Promise<void> {\n  // For some reason, the route query is not updated when all query keys remain the same.\n  // The next line of code forcibly resets the route query to fix the bug.\n  await router.replace({ query: {} });\n\n  await router.replace({ query: { ...anthroponym } });\n}\n\nonMounted(() => updatePageTitle(route.query));\n</script>\n\n<template>\n  <PageHeader />\n  <PreviewBanner />\n  <DeclensionDemo :initial-anthroponym=\"$route.query\" @declension=\"updatePageTitle\" />\n  <HowItWorks />\n  <LibraryDocs />\n  <PageFooter />\n  <ContactMeModal />\n  <AboutModal />\n</template>\n"],"names":["index","anthroponym","_ssrRenderAttrs","_mergeProps","_sfc_ssrRender"],"mappings":"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"}