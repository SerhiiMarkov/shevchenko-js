{"version":3,"sources":["webpack://shevchenko/webpack/universalModuleDefinition","webpack://shevchenko/webpack/bootstrap","webpack://shevchenko/./src/models/validate.js","webpack://shevchenko/./src/models/AbstractModel.js","webpack://shevchenko/./src/models/Gender.js","webpack://shevchenko/./src/models/AbstractName.js","webpack://shevchenko/./src/services/inflector/ruleUtil.js","webpack://shevchenko/./src/models/InflectionCase.js","webpack://shevchenko/./src/models/Anthroponym.js","webpack://shevchenko/./src/services/util/stringUtil.js","webpack://shevchenko/./src/services/pos/nn/config.js","webpack://shevchenko/./src/api.js","webpack://shevchenko/./src/models/FirstName.js","webpack://shevchenko/./src/models/MiddleName.js","webpack://shevchenko/./src/models/LastName.js","webpack://shevchenko/./src/bootstrap.js","webpack://shevchenko/./src/config.js","webpack://shevchenko/./node_modules/process/browser.js","webpack://shevchenko/./src/services/inflector/AnthroponymInflector.js","webpack://shevchenko/./src/services/inflector/FirstNameInflector.js","webpack://shevchenko/./src/services/inflector/LastNameInflector.js","webpack://shevchenko/./src/services/inflector/MiddleNameInflector.js","webpack://shevchenko/./src/services/inflector/RuleInflector.js","webpack://shevchenko/./src/services/util/regExpUtil.js","webpack://shevchenko/./src/services/pos/PosDetector.js","webpack://shevchenko/./src/services/pos/PosDetectorRule.js","webpack://shevchenko/./src/services/pos/nn/NeuralNetwork.js","webpack://shevchenko/external \"synaptic\"","webpack://shevchenko/./src/services/pos/nn/neuralNetworkUtil.js","webpack://shevchenko/./src/services/util/InMemoryCache.js"],"names":["genderValue","inflectionCaseValue","firstNameValue","middleNameValue","lastNameValue","anthroponymValue","gender","allowedValues","Object","values","GENDERS","isAllowedValue","indexOf","TypeError","join","inflectionCase","INFLECTION_CASES","firstName","isAllowedType","middleName","lastName","anthroponym","hasFirstName","prototype","hasOwnProperty","call","hasMiddleName","hasLastName","AbstractModel","new","target","Error","equals","bind","model","valueOf","freeze","MALE","FEMALE","Gender","validate","_value","isMale","isFemale","AbstractName","mapCompoundParts","callback","delimiter","parts","split","name","map","part","index","length","constructor","matchGender","matchUsage","matchRegExp","matchPos","compareUsage","rule","usage","strict","usages","word","RegExp","regexp","find","test","pos","firstRule","secondRule","NOMINATIVE","GENITIVE","DATIVE","ACCUSATIVE","ABLATIVE","LOCATIVE","VOCATIVE","InflectionCase","Anthroponym","toObject","getFirstName","getMiddleName","getLastName","getGender","reduce","value","attribute","FirstName","ReferenceError","MiddleName","LastName","isUpperCase","isLowerCase","toBinary","padLeft","applyCaseMask","char","toUpperCase","toLowerCase","string","charCodeAt","toString","symbol","filler","Array","substring","exampleString","UPPER_CASE","LOWER_CASE","NOT_RECOGNIZED_CASE","caseMask","mask","push","result","charMask","NETWORK_LAYER_SIZE_INPUT","NETWORK_LAYER_SIZE_HIDDEN","NETWORK_LAYER_SIZE_OUTPUT","POS_MAPPING","noun","adjective","shevchenko","anthroponymInflector","inflect","inNominative","inGenitive","inDative","inAccusative","inAblative","inLocative","inVocative","inAll","results","posDetector","PosDetector","PosDetectorRule","POS_NN_A_YA_STRUCTURE","POS_NN_A_YA_CACHE","POS_NN_OI_YI_II_STRUCTURE","POS_NN_OI_YI_II_CACHE","POS_NN_YH_STRUCTURE","POS_NN_YH_CACHE","ruleInflector","RuleInflector","firstNameInflector","FirstNameInflector","INFLECTION_RULES","middleNameInflector","MiddleNameInflector","lastNameInflector","LastNameInflector","AnthroponymInflector","process","env","_firstNameInflector","_middleNameInflector","_lastNameInflector","attributes","ruleUtil","rules","_ruleInflector","_rules","inflectionCaseName","namePart","filter","sort","_posDetector","isLastSegment","vowels","match","hasOneVowel","recognize","stringUtil","regExpUtil","_applyRuleModifier","_getRuleModifiers","modifier","modify","type","append","modifierValue","replace","regExp","inflectionCases","modifiers","searchValue","inflectedValue","groups","replacer","count","countGroups","exec","isApplicable","structure","cache","_isApplicable","_neuralNetwork","NeuralNetwork","_cache","InMemoryCache","hasItem","run","setItem","getItem","synaptic","neuralNetworkUtil","_network","Network","fromJSON","train","build","samples","options","Trainer","network","Architect","Perceptron","toJSON","input","encodeInput","output","activate","decodeOutput","JSON","stringify","isValidPos","encodeOutput","keys","Number","posIndex","findIndex","posValue","items","_items","Map","forEach","key","deleteItem","set","get","has","delete"],"mappings":"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","file":"shevchenko.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"synaptic\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"synaptic\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"shevchenko\"] = factory(require(\"synaptic\"));\n\telse\n\t\troot[\"shevchenko\"] = factory(root[\"synaptic\"]);\n})(typeof self !== \"undefined\" ? self : this, function(__WEBPACK_EXTERNAL_MODULE__25__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","import {INFLECTION_CASES} from \"./InflectionCase\";\nimport {GENDERS} from \"./Gender\";\n\n/**\n * Validate gender value.\n *\n * @param {*} gender\n * @return {void}\n * @throws {TypeError}\n */\nexport function genderValue(gender) {\n    const allowedValues = Object.values(GENDERS);\n    const isAllowedValue = allowedValues.indexOf(gender) !== -1;\n    if (!isAllowedValue) {\n        throw new TypeError(`Invalid gender value. Allowed values: ${allowedValues.join(\", \")}.`);\n    }\n}\n\n/**\n * Validate inflection case value.\n *\n * @param {*} inflectionCase\n * @return {void}\n * @throws {TypeError}\n */\nexport function inflectionCaseValue(inflectionCase) {\n    const allowedValues = Object.values(INFLECTION_CASES);\n    const isAllowedValue = allowedValues.indexOf(inflectionCase) !== -1;\n    if (!isAllowedValue) {\n        throw new TypeError(`Invalid inflection case value. Allowed values: ${allowedValues.join(\", \")}.`);\n    }\n}\n\n/**\n * Validate first name value.\n *\n * @param {*} firstName\n * @return {void}\n * @throws {TypeError}\n */\nexport function firstNameValue(firstName) {\n    const isAllowedType = typeof firstName === \"string\";\n    if (!isAllowedType) {\n        throw new TypeError(\"Invalid first name type. Allowed types: string.\");\n    }\n}\n\n/**\n * Validate middle name value.\n *\n * @param {*} middleName\n * @return {void}\n * @throws {TypeError}\n */\nexport function middleNameValue(middleName) {\n    const isAllowedType = typeof middleName === \"string\";\n    if (!isAllowedType) {\n        throw new TypeError(\"Invalid middle name type. Allowed types: string.\");\n    }\n}\n\n/**\n * Validate last name value.\n *\n * @param {*} lastName\n * @return {void}\n * @throws {TypeError}\n */\nexport function lastNameValue(lastName) {\n    const isAllowedType = typeof lastName === \"string\";\n    if (!isAllowedType) {\n        throw new TypeError(\"Invalid last name type. Allowed types: string.\");\n    }\n}\n\n/**\n * Validate anthroponym value.\n *\n * @param {*} anthroponym\n * @return {void}\n * @throws {TypeError}\n */\nexport function anthroponymValue(anthroponym) {\n    const isAllowedType = typeof anthroponym === \"object\" && anthroponym !== null;\n    if (!isAllowedType) {\n        throw new TypeError(\"Invalid anthroponym type. Allowed types: object.\");\n    }\n\n    const hasFirstName = Object.prototype.hasOwnProperty.call(anthroponym, \"firstName\");\n    const hasMiddleName = Object.prototype.hasOwnProperty.call(anthroponym, \"middleName\");\n    const hasLastName = Object.prototype.hasOwnProperty.call(anthroponym, \"lastName\");\n    if (!hasFirstName && !hasMiddleName && !hasLastName) {\n        throw new TypeError(\"Invalid anthroponym value.\");\n    }\n\n    genderValue(anthroponym.gender);\n\n    if (hasFirstName) {\n        firstNameValue(anthroponym.firstName);\n    }\n\n    if (hasMiddleName) {\n        middleNameValue(anthroponym.middleName);\n    }\n\n    if (hasLastName) {\n        lastNameValue(anthroponym.lastName);\n    }\n}\n\nexport default {genderValue, inflectionCaseValue, firstNameValue, middleNameValue, lastNameValue, anthroponymValue};\n","export default class AbstractModel {\n    /**\n     * AbstractModel constructor.\n     */\n    constructor() {\n        if (new.target === AbstractModel) {\n            throw new Error(\"AbstractModel instance cannot be constructed directly.\");\n        }\n        this.equals = this.equals.bind(this);\n    }\n\n    /**\n     * Determine whether the values of the two models are equal.\n     *\n     * @param {AbstractModel} model\n     * @return {boolean}\n     */\n    equals(model) {\n        return this.valueOf() === model.valueOf();\n    }\n}\n","import AbstractModel from \"./AbstractModel\";\nimport validate from \"./validate\";\n\n/**\n * Gender values.\n *\n * @type {Readonly}\n */\nexport const GENDERS = Object.freeze({\n    MALE: \"male\",\n    FEMALE: \"female\",\n});\n\nexport default class Gender extends AbstractModel {\n    /**\n     * Gender constructor.\n     *\n     * @param {string} gender\n     */\n    constructor(gender) {\n        super();\n        validate.genderValue(gender);\n        this._value = gender;\n        this.valueOf = this.valueOf.bind(this);\n        this.isMale = this.isMale.bind(this);\n        this.isFemale = this.isFemale.bind(this);\n    }\n\n    /**\n     * Get the primitive value of the specified object.\n     *\n     * @return {string}\n     */\n    valueOf() {\n        return this._value;\n    }\n\n    /**\n     * Determine whether gender value is male.\n     *\n     * @return {boolean}\n     */\n    isMale() {\n        return this.valueOf() === GENDERS.MALE;\n    }\n\n    /**\n     * Determine whether gender value is female.\n     *\n     * @return {boolean}\n     */\n    isFemale() {\n        return this.valueOf() === GENDERS.FEMALE;\n    }\n}\n","import AbstractModel from \"./AbstractModel\";\n\nexport default class AbstractName extends AbstractModel {\n    /**\n     * AbstractName constructor.\n     */\n    constructor() {\n        super();\n        if (new.target === AbstractName) {\n            throw new Error(\"AbstractName instance cannot be constructed directly.\");\n        }\n        this.mapCompoundParts = this.mapCompoundParts.bind(this);\n    }\n\n    /**\n     * Create a new compound name with the results of calling a provided function on every part in the original compound name.\n     *\n     * For example, the compound last name \"Нечуй-Левицький\" includes two parts \"Нечуй\" and \"Левицький\" divided by a delimiter \"-\".\n     * So the callback function will be called twice with values \"Нечуй\" and \"Левицький\".\n     *\n     * @param {function} callback\n     * @param {string} delimiter\n     * @return {AbstractName}\n     */\n    mapCompoundParts(callback, delimiter = \"-\") {\n        const parts = this.valueOf().split(delimiter);\n        const name = parts.map((part, index) => callback(part, index, parts.length)).join(delimiter);\n        return new this.constructor(name);\n    }\n}\n","/**\n * @param {object} rule\n * @param {string} rule.gender\n * @param {Gender} gender\n * @return {boolean}\n */\nexport function matchGender(rule, gender) {\n    return rule.gender.indexOf(gender.valueOf()) !== -1;\n}\n\n/**\n * @param {object} rule\n * @param {Array<string>} rule.usages\n * @param {string} usage\n * @param {boolean} [strict=false]\n * @return {boolean}\n */\nexport function matchUsage(rule, usage, strict = false) {\n    if (rule.usages.length) {\n        return rule.usages.indexOf(usage) !== -1;\n    }\n    return !strict;\n}\n\n/**\n * Match rule regular expression.\n *\n * @param {object} rule\n * @param {object} rule.regexp\n * @param {string} rule.regexp.find\n * @param {string} word\n * @return {boolean}\n */\nexport function matchRegExp(rule, word) {\n    return new RegExp(rule.regexp.find, \"gim\").test(word);\n}\n\n/**\n * @param {object} rule\n * @param {object} rule.pos\n * @param {string} pos\n * @return {boolean}\n */\nexport function matchPos(rule, pos) {\n    if (pos === null) {\n        return true;\n    }\n    return rule.pos === pos;\n}\n\n/**\n * @param {object} firstRule\n * @param {Array<string>} firstRule.usages\n * @param {object} secondRule\n * @param {Array<string>} secondRule.usages\n * @param {string} usage\n * @return {number}\n */\nexport function compareUsage(firstRule, secondRule, usage) {\n    return !firstRule.usages.length && secondRule.usages.length && secondRule.usages.indexOf(usage) !== -1;\n}\n","import AbstractModel from \"./AbstractModel\";\nimport validate from \"./validate\";\n\n/**\n * Inflection case values.\n *\n * @type {Readonly}\n */\nexport const INFLECTION_CASES = Object.freeze({\n    NOMINATIVE: \"nominative\",\n    GENITIVE: \"genitive\",\n    DATIVE: \"dative\",\n    ACCUSATIVE: \"accusative\",\n    ABLATIVE: \"ablative\",\n    LOCATIVE: \"locative\",\n    VOCATIVE: \"vocative\",\n});\n\nexport default class InflectionCase extends AbstractModel {\n    /**\n     * InflectionCase constructor.\n     *\n     * @param {string} inflectionCase\n     */\n    constructor(inflectionCase) {\n        super();\n        validate.inflectionCaseValue(inflectionCase);\n        this._value = inflectionCase;\n        this.valueOf = this.valueOf.bind(this);\n    }\n\n    /**\n     * Get the primitive value of the specified object.\n     *\n     * @return {string}\n     */\n    valueOf() {\n        return this._value;\n    }\n}\n","import AbstractModel from \"./AbstractModel\";\nimport Gender from \"./Gender\";\nimport FirstName from \"./FirstName\";\nimport MiddleName from \"./MiddleName\";\nimport LastName from \"./LastName\";\nimport validate from \"./validate\";\n\nexport default class Anthroponym extends AbstractModel {\n    /**\n     * Anthroponym constructor.\n     *\n     * @param {object} anthroponym\n     */\n    constructor(anthroponym) {\n        super();\n        validate.anthroponymValue(anthroponym);\n        this._value = {};\n        this._value.gender = anthroponym.gender;\n\n        const hasFirstName = Object.prototype.hasOwnProperty.call(anthroponym, \"firstName\");\n        if (hasFirstName) {\n            this._value.firstName = anthroponym.firstName;\n        }\n\n        const hasMiddleName = Object.prototype.hasOwnProperty.call(anthroponym, \"middleName\");\n        if (hasMiddleName) {\n            this._value.middleName = anthroponym.middleName;\n        }\n\n        const hasLastName = Object.prototype.hasOwnProperty.call(anthroponym, \"lastName\");\n        if (hasLastName) {\n            this._value.lastName = anthroponym.lastName;\n        }\n\n        this.valueOf = this.valueOf.bind(this);\n        this.toObject = this.toObject.bind(this);\n        this.hasFirstName = this.hasFirstName.bind(this);\n        this.hasMiddleName = this.hasMiddleName.bind(this);\n        this.hasLastName = this.hasLastName.bind(this);\n        this.getFirstName = this.getFirstName.bind(this);\n        this.getMiddleName = this.getMiddleName.bind(this);\n        this.getLastName = this.getLastName.bind(this);\n        this.getGender = this.getGender.bind(this);\n    }\n\n    /**\n     * Get the primitive value of the specified object.\n     *\n     * @return {string}\n     */\n    valueOf() {\n        return Object.values(this._value).reduce((value, attribute) => `${value} ${attribute}`, \"\");\n    }\n\n    /**\n     * Cast the value to an object.\n     *\n     * @return {object}\n     */\n    toObject() {\n        return {...this._value};\n    }\n\n    /**\n     * Determine whether the anthroponym has first name.\n     *\n     * @return {boolean}\n     */\n    hasFirstName() {\n        return Object.prototype.hasOwnProperty.call(this._value, \"firstName\");\n    }\n\n    /**\n     * Determine whether the anthroponym has middle name.\n     *\n     * @return {boolean}\n     */\n    hasMiddleName() {\n        return Object.prototype.hasOwnProperty.call(this._value, \"middleName\");\n    }\n\n    /**\n     * Determine whether the anthroponym has last name.\n     *\n     * @return {boolean}\n     */\n    hasLastName() {\n        return Object.prototype.hasOwnProperty.call(this._value, \"lastName\");\n    }\n\n    /**\n     * Get first name.\n     *\n     * @return {FirstName}\n     * @throws {ReferenceError}\n     */\n    getFirstName() {\n        if (this.hasFirstName()) {\n            return new FirstName(this._value.firstName);\n        }\n        throw new ReferenceError(\"First name is not defined.\");\n    }\n\n    /**\n     * Get middle name.\n     *\n     * @return {MiddleName}\n     * @throws {ReferenceError}\n     */\n    getMiddleName() {\n        if (this.hasMiddleName()) {\n            return new MiddleName(this._value.middleName);\n        }\n        throw new ReferenceError(\"Middle name is not defined.\");\n    }\n\n    /**\n     * Get last name.\n     *\n     * @return {LastName}\n     * @throws {ReferenceError}\n     */\n    getLastName() {\n        if (this.hasLastName()) {\n            return new LastName(this._value.lastName);\n        }\n        throw new ReferenceError(\"Last name is not defined.\");\n    }\n\n    /**\n     * Get gender.\n     *\n     * @return {Gender}\n     */\n    getGender() {\n        return new Gender(this._value.gender);\n    }\n}\n","/**\n * Detect if a character is in the upper case.\n *\n * @param {string} char\n */\nexport function isUpperCase(char) {\n    return char === char.toUpperCase() && char !== char.toLowerCase();\n}\n\n/**\n * Detect if a character is in the lower case.\n *\n * @param {string} char\n */\nexport function isLowerCase(char) {\n    return char === char.toLowerCase() && char !== char.toUpperCase();\n}\n\n/**\n * Convert a string to a binary representation.\n *\n * @param {string} string\n * @return {string}\n */\nexport function toBinary(string) {\n    return string\n        .split(\"\")\n        .map((char) => char.charCodeAt(0).toString(2))\n        .join(\"\");\n}\n\n/**\n * Fill the left part of the string with a symbol to a given length.\n *\n * @param {string} string\n * @param {number} length\n * @param {string} symbol\n * @return {string}\n */\nexport function padLeft(string, length, symbol = \"0\") {\n    const filler = new Array(length + 1).join(symbol);\n    return filler.substring(0, filler.length - string.length) + string;\n}\n\n/**\n * Apply the case mask of the example string to the string.\n *\n * @param {string} exampleString\n * @param {string} string\n * @return {string}\n */\nexport function applyCaseMask(exampleString, string) {\n    const UPPER_CASE = \"u\";\n    const LOWER_CASE = \"l\";\n    const NOT_RECOGNIZED_CASE = null;\n\n    // Create case mask from the example string.\n    const caseMask = exampleString.split(\"\").reduce((mask, char) => {\n        if (isUpperCase(char)) {\n            mask.push(UPPER_CASE);\n        } else if (isLowerCase(char)) {\n            mask.push(LOWER_CASE);\n        } else {\n            mask.push(NOT_RECOGNIZED_CASE);\n        }\n        return mask;\n    }, []);\n\n    // Apply case mask to the desired string.\n    return string.split(\"\").reduce((result, char, index) => {\n        let charMask = caseMask[index];\n        if (typeof charMask === \"undefined\" && caseMask.length !== 0) {\n            charMask = caseMask[caseMask.length - 1];\n        }\n        if (charMask === UPPER_CASE) {\n            char = char.toUpperCase();\n        } else if (charMask === LOWER_CASE) {\n            char = char.toLowerCase();\n        }\n        return result + char;\n    }, \"\");\n}\n","/**\n * Number of nodes for input layer.\n *\n * @type {number}\n */\nexport const NETWORK_LAYER_SIZE_INPUT = 360;\n\n/**\n * Number of nodes for hidden layer.\n *\n * @type {number}\n */\nexport const NETWORK_LAYER_SIZE_HIDDEN = 20;\n\n/**\n * Number of nodes for output layer.\n *\n * @type {number}\n */\nexport const NETWORK_LAYER_SIZE_OUTPUT = 1;\n\n/**\n * Preconfigured mapping for parts of speech.\n *\n * @type {Readonly}\n */\nexport const POS_MAPPING = Object.freeze({\n    noun: [0],\n    adjective: [1],\n});\n","import InflectionCase from \"./models/InflectionCase\";\nimport {INFLECTION_CASES} from \"./models/InflectionCase\";\nimport Anthroponym from \"./models/Anthroponym\";\nimport {GENDERS} from \"./models/Gender\";\nimport {anthroponymInflector} from \"./bootstrap\";\n\n/**\n * Inflect the anthroponym.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n * @param {string} inflectionCase\n */\nfunction shevchenko(anthroponym, inflectionCase) {\n    return anthroponymInflector.inflect(new Anthroponym(anthroponym), new InflectionCase(inflectionCase)).toObject();\n}\n\n/**\n * Inflect the anthroponym in nominative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inNominative(anthroponym) {\n    return shevchenko(anthroponym, INFLECTION_CASES.NOMINATIVE);\n}\n\n/**\n * Inflect the anthroponym in genitive case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inGenitive(anthroponym) {\n    return shevchenko(anthroponym, INFLECTION_CASES.GENITIVE);\n}\n\n/**\n * Inflect the anthroponym in dative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inDative(anthroponym) {\n    return shevchenko(anthroponym, INFLECTION_CASES.DATIVE);\n}\n\n/**\n * Inflect the anthroponym in accusative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inAccusative(anthroponym) {\n    return shevchenko(anthroponym, INFLECTION_CASES.ACCUSATIVE);\n}\n\n/**\n * Inflect the anthroponym in ablative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inAblative(anthroponym) {\n    return shevchenko(anthroponym, INFLECTION_CASES.ABLATIVE);\n}\n\n/**\n * Inflect the anthroponym in locative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inLocative(anthroponym) {\n    return shevchenko(anthroponym, INFLECTION_CASES.LOCATIVE);\n}\n\n/**\n * Inflect the anthroponym in vocative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inVocative(anthroponym) {\n    return shevchenko(anthroponym, INFLECTION_CASES.VOCATIVE);\n}\n\n/**\n * Inflect the anthroponym in all cases.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inAll(anthroponym) {\n    return Object.values(INFLECTION_CASES).reduce((results, inflectionCase) => {\n        results[inflectionCase] = shevchenko(anthroponym, inflectionCase);\n        return results;\n    }, {});\n}\n\nexport {\n    inNominative,\n    inGenitive,\n    inDative,\n    inAccusative,\n    inAblative,\n    inLocative,\n    inVocative,\n    inAll,\n    GENDERS,\n    INFLECTION_CASES,\n};\n\nshevchenko.inNominative = inNominative;\nshevchenko.inGenitive = inGenitive;\nshevchenko.inDative = inDative;\nshevchenko.inAccusative = inAccusative;\nshevchenko.inAblative = inAblative;\nshevchenko.inLocative = inLocative;\nshevchenko.inVocative = inVocative;\nshevchenko.inAll = inAll;\nshevchenko.GENDERS = GENDERS;\nshevchenko.INFLECTION_CASES = INFLECTION_CASES;\n\nexport default shevchenko;\n","import AbstractName from \"./AbstractName\";\nimport validate from \"./validate\";\n\nexport default class FirstName extends AbstractName {\n    /**\n     * FirstName constructor.\n     *\n     * @param {string} firstName\n     */\n    constructor(firstName) {\n        super();\n        validate.firstNameValue(firstName);\n        this._value = firstName;\n        this.valueOf = this.valueOf.bind(this);\n    }\n\n    /**\n     * Get the primitive value of the specified object.\n     *\n     * @return {string}\n     */\n    valueOf() {\n        return this._value;\n    }\n}\n","import AbstractName from \"./AbstractName\";\nimport validate from \"./validate\";\n\nexport default class MiddleName extends AbstractName {\n    /**\n     * MiddleName constructor.\n     *\n     * @param {string} middleName\n     */\n    constructor(middleName) {\n        super();\n        validate.middleNameValue(middleName);\n        this._value = middleName;\n        this.valueOf = this.valueOf.bind(this);\n    }\n\n    /**\n     * Get the primitive value of the specified object.\n     *\n     * @return {string}\n     */\n    valueOf() {\n        return this._value;\n    }\n}\n","import AbstractName from \"./AbstractName\";\nimport validate from \"./validate\";\n\nexport default class LastName extends AbstractName {\n    /**\n     * LastName constructor.\n     *\n     * @param {string} lastName\n     */\n    constructor(lastName) {\n        super();\n        validate.lastNameValue(lastName);\n        this._value = lastName;\n        this.valueOf = this.valueOf.bind(this);\n    }\n\n    /**\n     * Get the primitive value of the specified object.\n     *\n     * @return {string}\n     */\n    valueOf() {\n        return this._value;\n    }\n}\n","import {\n    INFLECTION_RULES,\n    POS_NN_A_YA_STRUCTURE,\n    POS_NN_A_YA_CACHE,\n    POS_NN_OI_YI_II_STRUCTURE,\n    POS_NN_OI_YI_II_CACHE,\n    POS_NN_YH_STRUCTURE,\n    POS_NN_YH_CACHE,\n} from \"./config\";\nimport AnthroponymInflector from \"./services/inflector/AnthroponymInflector\";\nimport FirstNameInflector from \"./services/inflector/FirstNameInflector\";\nimport LastNameInflector from \"./services/inflector/LastNameInflector\";\nimport MiddleNameInflector from \"./services/inflector/MiddleNameInflector\";\nimport RuleInflector from \"./services/inflector/RuleInflector\";\nimport PosDetector from \"./services/pos/PosDetector\";\nimport PosDetectorRule from \"./services/pos/PosDetectorRule\";\n\nconst posDetector = new PosDetector([\n    // The part of speech detector for female last names with endings \"-a\", \"-я\".\n    new PosDetectorRule(\n        (word, gender) => gender.isFemale() && /(а|я)$/.test(word),\n        POS_NN_A_YA_STRUCTURE,\n        POS_NN_A_YA_CACHE,\n    ),\n    // The part of speech detector for male last names with endings \"-ой\", \"-ий\", \"-ій\".\n    new PosDetectorRule(\n        (word, gender) => gender.isMale() && /(ой|ий|ій)$/.test(word),\n        POS_NN_OI_YI_II_STRUCTURE,\n        POS_NN_OI_YI_II_CACHE,\n    ),\n    // The part of speech detector for male last names with endings \"-их\".\n    new PosDetectorRule((word, gender) => gender.isMale() && /(их)$/.test(word), POS_NN_YH_STRUCTURE, POS_NN_YH_CACHE),\n]);\n\nconst ruleInflector = new RuleInflector();\nconst firstNameInflector = new FirstNameInflector(ruleInflector, INFLECTION_RULES);\nconst middleNameInflector = new MiddleNameInflector(ruleInflector, INFLECTION_RULES);\nconst lastNameInflector = new LastNameInflector(ruleInflector, INFLECTION_RULES, posDetector);\n\nconst anthroponymInflector = new AnthroponymInflector(firstNameInflector, middleNameInflector, lastNameInflector);\n\nexport {anthroponymInflector};\n","const INFLECTION_RULES = process.env.INFLECTION_RULES;\nconst POS_NN_A_YA_STRUCTURE = Object.freeze(process.env.POS_NN_A_YA_STRUCTURE);\nconst POS_NN_A_YA_CACHE = process.env.POS_NN_A_YA_CACHE;\nconst POS_NN_OI_YI_II_STRUCTURE = Object.freeze(process.env.POS_NN_OI_YI_II_STRUCTURE);\nconst POS_NN_OI_YI_II_CACHE = process.env.POS_NN_OI_YI_II_CACHE;\nconst POS_NN_YH_STRUCTURE = Object.freeze(process.env.POS_NN_YH_STRUCTURE);\nconst POS_NN_YH_CACHE = process.env.POS_NN_YH_CACHE;\n\nexport {\n    INFLECTION_RULES,\n    POS_NN_A_YA_STRUCTURE,\n    POS_NN_A_YA_CACHE,\n    POS_NN_OI_YI_II_STRUCTURE,\n    POS_NN_OI_YI_II_CACHE,\n    POS_NN_YH_STRUCTURE,\n    POS_NN_YH_CACHE,\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import Anthroponym from \"../../models/Anthroponym\";\n\nexport default class AnthroponymInflector {\n    /**\n     * AnthroponymInflector constructor.\n     *\n     * @param {FirstNameInflector} firstNameInflector\n     * @param {MiddleNameInflector} middleNameInflector\n     * @param {LastNameInflector} lastNameInflector\n     */\n    constructor(firstNameInflector, middleNameInflector, lastNameInflector) {\n        this._firstNameInflector = firstNameInflector;\n        this._middleNameInflector = middleNameInflector;\n        this._lastNameInflector = lastNameInflector;\n        this.inflect = this.inflect.bind(this);\n    }\n\n    /**\n     * Inflect the anthroponym first, last and middle names.\n     *\n     * @param {Anthroponym} anthroponym\n     * @param {InflectionCase} inflectionCase\n     * @return {Anthroponym}\n     */\n    inflect(anthroponym, inflectionCase) {\n        const attributes = {};\n\n        if (anthroponym.hasFirstName()) {\n            attributes.firstName = this._firstNameInflector\n                .inflect(anthroponym.getFirstName(), anthroponym.getGender(), inflectionCase)\n                .valueOf();\n        }\n\n        if (anthroponym.hasMiddleName()) {\n            attributes.middleName = this._middleNameInflector\n                .inflect(anthroponym.getMiddleName(), anthroponym.getGender(), inflectionCase)\n                .valueOf();\n        }\n\n        if (anthroponym.hasLastName()) {\n            attributes.lastName = this._lastNameInflector\n                .inflect(anthroponym.getLastName(), anthroponym.getGender(), inflectionCase)\n                .valueOf();\n        }\n\n        return new Anthroponym({...attributes, gender: anthroponym.getGender().valueOf()});\n    }\n}\n","import * as ruleUtil from \"./ruleUtil\";\n\nexport default class FirstNameInflector {\n    /**\n     * FirstNameInflector constructor.\n     *\n     * @param {RuleInflector} ruleInflector\n     * @param {Array} rules\n     */\n    constructor(ruleInflector, rules) {\n        this._ruleInflector = ruleInflector;\n        this._rules = rules;\n        this.inflect = this.inflect.bind(this);\n    }\n\n    /**\n     * Inflect a first name.\n     *\n     * @param {FirstName} firstName\n     * @param {Gender} gender\n     * @param {InflectionCase} inflectionCaseName\n     * @return {FirstName}\n     */\n    inflect(firstName, gender, inflectionCaseName) {\n        return firstName.mapCompoundParts((namePart) => {\n            // Get the most suitable inflection rule.\n            const [rule] = this._rules\n                .filter(\n                    (rule) =>\n                        ruleUtil.matchGender(rule, gender) &&\n                        ruleUtil.matchUsage(rule, \"firstName\") &&\n                        ruleUtil.matchRegExp(rule, namePart),\n                )\n                .sort((firstRule, secondRule) => ruleUtil.compareUsage(firstRule, secondRule, \"firstName\"));\n\n            // If no inflection rule found, return name \"as is\".\n            if (!rule) {\n                return namePart;\n            }\n\n            // Otherwise, inflect name by the inflection rule.\n            return this._ruleInflector.inflect(namePart, inflectionCaseName, rule);\n        });\n    }\n}\n","import * as ruleUtil from \"./ruleUtil\";\n\nexport default class LastNameInflector {\n    /**\n     * LastNameInflector constructor.\n     *\n     * @param {RuleInflector} ruleInflector\n     * @param {Array} rules\n     * @param {PosDetector} posDetector\n     */\n    constructor(ruleInflector, rules, posDetector) {\n        this._ruleInflector = ruleInflector;\n        this._rules = rules;\n        this._posDetector = posDetector;\n        this.inflect = this.inflect.bind(this);\n    }\n\n    /**\n     * Inflect a last name.\n     *\n     * @param {LastName} lastName\n     * @param {Gender} gender\n     * @param {InflectionCase} inflectionCaseName\n     * @return {LastName}\n     */\n    inflect(lastName, gender, inflectionCaseName) {\n        return lastName.mapCompoundParts((namePart, index, length) => {\n            // If the first (on practice, not the last) short part of the compound last name has only one vowel,\n            // it is not perceived as an independent surname and returned \"as is\".\n            const isLastSegment = index === length - 1;\n            const vowels = namePart.match(/(а|о|у|е|и|і|я|ю|є|ї)/gim);\n            const hasOneVowel = vowels && vowels.length === 1;\n            if (!isLastSegment && hasOneVowel) {\n                return namePart;\n            }\n\n            // Get the most suitable inflection rule.\n            const [rule] = this._rules\n                .filter(\n                    (rule) =>\n                        ruleUtil.matchGender(rule, gender) &&\n                        ruleUtil.matchUsage(rule, \"lastName\") &&\n                        ruleUtil.matchRegExp(rule, namePart) &&\n                        ruleUtil.matchPos(rule, this._posDetector.recognize(namePart, gender)),\n                )\n                .sort((firstRule, secondRule) => ruleUtil.compareUsage(firstRule, secondRule, \"lastName\"));\n\n            // If no inflection rule found, return name \"as is\".\n            if (!rule) {\n                return namePart;\n            }\n\n            // Otherwise, inflect name by the inflection rule.\n            return this._ruleInflector.inflect(namePart, inflectionCaseName, rule);\n        });\n    }\n}\n","import * as ruleUtil from \"./ruleUtil\";\n\nexport default class MiddleNameInflector {\n    /**\n     * MiddleNameInflector constructor.\n     *\n     * @param {RuleInflector} ruleInflector\n     * @param {Array} rules\n     */\n    constructor(ruleInflector, rules) {\n        this._ruleInflector = ruleInflector;\n        this._rules = rules;\n        this.inflect = this.inflect.bind(this);\n    }\n\n    /**\n     * Inflect a middle name.\n     *\n     * @param {MiddleName} middleName\n     * @param {Gender} gender\n     * @param {InflectionCase} inflectionCaseName\n     * @return {MiddleName}\n     */\n    inflect(middleName, gender, inflectionCaseName) {\n        return middleName.mapCompoundParts((namePart) => {\n            // Get the most suitable inflection rule.\n            const [rule] = this._rules\n                .filter(\n                    (rule) =>\n                        ruleUtil.matchGender(rule, gender) &&\n                        ruleUtil.matchUsage(rule, \"middleName\", true) &&\n                        ruleUtil.matchRegExp(rule, namePart),\n                )\n                .sort((firstRule, secondRule) => ruleUtil.compareUsage(firstRule, secondRule, \"middleName\"));\n\n            // If no inflection rule found, return name \"as is\".\n            if (!rule) {\n                return namePart;\n            }\n\n            // Otherwise, inflect name by the inflection rule.\n            return this._ruleInflector.inflect(namePart, inflectionCaseName, rule);\n        });\n    }\n}\n","import * as stringUtil from \"../util/stringUtil\";\nimport * as regExpUtil from \"../util/regExpUtil\";\n\nexport default class RuleInflector {\n    /**\n     * RuleInflector constructor.\n     */\n    constructor() {\n        this._applyRuleModifier = this._applyRuleModifier.bind(this);\n        this._getRuleModifiers = this._getRuleModifiers.bind(this);\n        this.inflect = this.inflect.bind(this);\n    }\n\n    /**\n     * Apply the inflection rule modifier to the value.\n     *\n     * @param {object} modifier\n     * @param {string} modifier.type\n     * @param {string} modifier.value\n     * @param {string} value\n     * @return {*}\n     * @private\n     */\n    _applyRuleModifier(modifier, value) {\n        if (typeof modifier === \"object\") {\n            const modify = this._getRuleModifiers()[modifier.type];\n            if (typeof modify === \"function\") {\n                return modify(value, modifier.value);\n            }\n        }\n        return value;\n    }\n\n    /**\n     * Get an inflection rule modifier functions.\n     *\n     * @return {object}\n     * @private\n     */\n    _getRuleModifiers() {\n        return Object.freeze({\n            append: (value, modifierValue) => value + modifierValue,\n            replace: (value, modifierValue) => modifierValue,\n        });\n    }\n\n    /**\n     * Inflect a word by the inflection rule.\n     *\n     * @param {string} word\n     * @param {InflectionCase} inflectionCase\n     * @param {object} rule\n     * @param {object} rule.regexp\n     * @param {string} rule.regexp.modify\n     * @param {string} rule.inflectionCases\n     * @return {string}\n     */\n    inflect(word, inflectionCase, rule) {\n        const regExp = rule.regexp.modify;\n        const [modifiers] = rule.inflectionCases[inflectionCase.valueOf()];\n        if (typeof modifiers === \"object\") {\n            const searchValue = new RegExp(regExp, \"gm\");\n            const inflectedValue = word.toLowerCase().replace(searchValue, (match, ...groups) => {\n                let replacer = \"\";\n                const count = regExpUtil.countGroups(regExp);\n                for (let index = 0; index < count; index++) {\n                    replacer += this._applyRuleModifier(modifiers[index], groups[index]);\n                }\n                return replacer;\n            });\n            return stringUtil.applyCaseMask(word, inflectedValue);\n        }\n        return word;\n    }\n}\n","/**\n * Count a number of groups in a regular expression.\n *\n * @param {RegExp|string} regExp\n * @return {number}\n */\nexport function countGroups(regExp) {\n    return new RegExp(`${regExp}|`).exec(\"\").length - 1;\n}\n","export default class PosDetector {\n    /**\n     * PosDetector constructor.\n     *\n     * @param {Array<PosDetectorRule>} rules\n     */\n    constructor(rules) {\n        this._rules = rules;\n        this.recognize = this.recognize.bind(this);\n    }\n\n    /**\n     * Recognize the part of speech of the word.\n     *\n     * @param {string} word\n     * @param {Gender} gender\n     * @return {string|null} - Recognized part of speech or null if no applicable rule was found.\n     */\n    recognize(word, gender) {\n        const rule = this._rules.find((rule) => rule.isApplicable(word, gender));\n        if (!rule) {\n            return null;\n        }\n        return rule.recognize(word, gender);\n    }\n}\n","import NeuralNetwork from \"./nn/NeuralNetwork\";\nimport InMemoryCache from \"../util/InMemoryCache\";\n\nexport default class PosDetectorRule {\n    /**\n     * PosDetectorRule constructor.\n     *\n     * @param {function} isApplicable\n     * @param {object} structure\n     * @param {object} [cache={}]\n     */\n    constructor(isApplicable, structure, cache = {}) {\n        this._isApplicable = isApplicable;\n        this._neuralNetwork = new NeuralNetwork(structure);\n        this._cache = new InMemoryCache(cache);\n        this.isApplicable = this.isApplicable.bind(this);\n        this.recognize = this.recognize.bind(this);\n    }\n\n    /**\n     * Test if the part of speech recognizer step is applicable.\n     *\n     * @param {string} word\n     * @param {Gender} gender\n     * @return {boolean}\n     */\n    isApplicable(word, gender) {\n        return this._isApplicable(word, gender);\n    }\n\n    /**\n     * Recognize part of speech of the word.\n     *\n     * @param {string} word\n     * @param {Gender} gender\n     */\n    recognize(word, gender) {\n        if (!this._cache.hasItem(word)) {\n            const pos = this._neuralNetwork.run(word);\n            this._cache.setItem(word, pos);\n        }\n        return this._cache.getItem(word);\n    }\n}\n","import * as synaptic from \"synaptic\";\nimport {NETWORK_LAYER_SIZE_INPUT, NETWORK_LAYER_SIZE_HIDDEN, NETWORK_LAYER_SIZE_OUTPUT} from \"./config\";\nimport * as neuralNetworkUtil from \"./neuralNetworkUtil\";\n\n/**\n * NeuralNetwork class.\n *\n * Based on three-layer perceptron and used for the part of speech recognizing.\n */\nexport default class NeuralNetwork {\n    /**\n     * NeuralNetwork constructor.\n     *\n     * @param {object} structure\n     */\n    constructor(structure) {\n        this._network = synaptic.Network.fromJSON(structure);\n        this.train = this.train.bind(this);\n        this.build = this.build.bind(this);\n        this.run = this.run.bind(this);\n        this.valueOf = this.valueOf.bind(this);\n        this.toString = this.toString.bind(this);\n    }\n\n    /**\n     * Train the neural network on the training data samples.\n     *\n     * @param {Array<object>} samples\n     * @param {object} options\n     * @return {void}\n     */\n    train(samples, options) {\n        new synaptic.Trainer(this._network).train(samples, options);\n    }\n\n    /**\n     * Build the neural network on the training data array.\n     *\n     * @param {Array<object>} samples\n     * @param {object} options\n     * @return {NeuralNetwork}\n     */\n    build(samples, options) {\n        const network = new synaptic.Architect.Perceptron(\n            NETWORK_LAYER_SIZE_INPUT,\n            NETWORK_LAYER_SIZE_HIDDEN,\n            NETWORK_LAYER_SIZE_OUTPUT,\n        );\n        new synaptic.Trainer(network).train(samples, options);\n        return new NeuralNetwork(network.toJSON());\n    }\n\n    /**\n     * Run the neural network on the input data.\n     *\n     * @param {string} input\n     * @return {string|null}\n     */\n    run(input) {\n        const value = neuralNetworkUtil.encodeInput(input);\n        const output = this._network.activate(value);\n        return neuralNetworkUtil.decodeOutput(output);\n    }\n\n    /**\n     * Get the neural network structure.\n     *\n     * @return {string}\n     */\n    valueOf() {\n        return JSON.stringify(this._network.toJSON());\n    }\n\n    /**\n     * Cast to string.\n     *\n     * @return {string}\n     */\n    toString() {\n        return this.valueOf();\n    }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__25__;","import * as stringUtil from \"../../util/stringUtil\";\nimport {POS_MAPPING, NETWORK_LAYER_SIZE_INPUT} from \"./config\";\n\n/**\n * Determine if provided value is a valid part of speech value.\n *\n * @param {string} value\n * @return {boolean}\n */\nexport function isValidPos(value) {\n    return Object.keys(POS_MAPPING).indexOf(value) !== -1;\n}\n\n/**\n * Encode word value for usage in the neural network.\n *\n * @param {string} input\n * @return {Array<string>}\n */\nexport function encodeInput(input) {\n    return stringUtil.padLeft(stringUtil.toBinary(input), NETWORK_LAYER_SIZE_INPUT).split(\"\");\n}\n\n/**\n * Encode part of speech value for usage in the neural network.\n *\n * @param {string} output\n * @return {Array<number>|undefined}\n */\nexport function encodeOutput(output) {\n    return POS_MAPPING[output];\n}\n\n/**\n * Decode part of speech value returned from the neural network.\n *\n * @param {Array<number>} output\n * @return {string|null}\n */\nexport function decodeOutput(output) {\n    // Neural network output is an array of values in 0..1 range.\n    // We'll need to convert these values to integer values.\n    // If value greater than or equal to 0.5 - convert to 1.\n    // If value less than 0.5 - convert to 0.\n    const value = output.map((value) => Number(value >= 0.5));\n    const posIndex = Object.values(POS_MAPPING).findIndex((posValue) => posValue.join(\"\") === value.join(\"\"));\n    return Object.keys(POS_MAPPING)[posIndex] || null;\n}\n","export default class InMemoryCache {\n    /**\n     * InMemoryCache constructor.\n     *\n     * @param {object} [items={}]\n     */\n    constructor(items = {}) {\n        this._items = new Map();\n        // Initialize cache items.\n        Object.keys(items).forEach((key) => this.setItem(key, items[key]));\n\n        this.setItem = this.setItem.bind(this);\n        this.getItem = this.getItem.bind(this);\n        this.hasItem = this.hasItem.bind(this);\n        this.deleteItem = this.deleteItem.bind(this);\n    }\n\n    /**\n     * Set the value for the key in the cache object.\n     *\n     * @param {*} key\n     * @param {*} value\n     * @return {void}\n     */\n    setItem(key, value) {\n        this._items.set(key, value);\n    }\n\n    /**\n     * Get the value associated to the key, or undefined if there is none.\n     *\n     * @param {*} key\n     * @return {*}\n     */\n    getItem(key) {\n        return this._items.get(key);\n    }\n\n    /**\n     * Return a boolean asserting whether a value has been associated to the key in the cache object or not.\n     *\n     * @param {*} key\n     * @return {boolean}\n     */\n    hasItem(key) {\n        return this._items.has(key);\n    }\n\n    /**\n     * Delete the value associated to the key.\n     *\n     * @param {*} key\n     * @return {void}\n     */\n    deleteItem(key) {\n        this._items.delete(key);\n    }\n}\n"],"sourceRoot":""}