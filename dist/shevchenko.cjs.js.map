{"version":3,"sources":["webpack://shevchenko/webpack/bootstrap","webpack://shevchenko/./src/valueObjects/AbstractName.js","webpack://shevchenko/./src/services/inflector/ruleUtil.js","webpack://shevchenko/./src/valueObjects/Anthroponym.js","webpack://shevchenko/./src/valueObjects/Gender.js","webpack://shevchenko/./src/util/stringUtil.js","webpack://shevchenko/./src/services/pos/config.js","webpack://shevchenko/./src/api.js","webpack://shevchenko/./src/valueObjects/InflectionCase.js","webpack://shevchenko/./src/valueObjects/FirstName.js","webpack://shevchenko/./src/valueObjects/MiddleName.js","webpack://shevchenko/./src/valueObjects/LastName.js","webpack://shevchenko/./src/bootstrap.js","webpack://shevchenko/./src/config.js","webpack://shevchenko/./node_modules/process/browser.js","webpack://shevchenko/./src/services/inflector/AnthroponymInflector.js","webpack://shevchenko/./src/services/inflector/FirstNameInflector.js","webpack://shevchenko/./src/services/inflector/LastNameInflector.js","webpack://shevchenko/./src/services/inflector/MiddleNameInflector.js","webpack://shevchenko/./src/services/inflector/RuleInflector.js","webpack://shevchenko/./src/util/regExpUtil.js","webpack://shevchenko/./src/services/pos/Recognizer.js","webpack://shevchenko/./src/services/pos/RecognizerRule.js","webpack://shevchenko/./src/services/pos/NeuralNetwork.js","webpack://shevchenko/external \"synaptic\"","webpack://shevchenko/./src/services/pos/neuralNetworkUtil.js","webpack://shevchenko/./src/util/InMemoryCache.js"],"names":["AbstractName","transform","parts","toString","split","name","map","part","index","length","join","constructor","matchGender","matchUsage","matchRegExp","matchPos","compareUsage","rule","gender","includes","usage","strict","usages","word","RegExp","regexp","find","test","pos","firstRule","secondRule","Anthroponym","anthroponym","TypeError","hasFirstName","Object","prototype","hasOwnProperty","call","hasMiddleName","hasLastName","Gender","validate","FirstName","firstName","MiddleName","middleName","LastName","lastName","_gender","_firstName","_middleName","_lastName","object","GENDERS","freeze","MALE","FEMALE","values","allowedValues","isUpperCase","isLowerCase","toBinary","applyCaseMask","source","charAt","toUpperCase","toLowerCase","char","charCodeAt","target","toOriginalCase","mask","reduce","result","method","NETWORK_LAYER_SIZE_INPUT","NETWORK_LAYER_SIZE_HIDDEN","NETWORK_LAYER_SIZE_OUTPUT","POS_MAPPING","noun","adjective","inNominative","inGenitive","inDative","inAccusative","inAblative","inLocative","inVocative","inAll","shevchenko","inflectionCase","anthroponymInflector","inflect","InflectionCase","toObject","INFLECTION_CASES","NOMINATIVE","GENITIVE","DATIVE","ACCUSATIVE","ABLATIVE","LOCATIVE","VOCATIVE","results","_inflectionCase","posRecognizer","Recognizer","RecognizerRule","isFemale","POS_NN_A_YA_STRUCTURE","POS_NN_A_YA_CACHE","isMale","POS_NN_OI_YI_II_STRUCTURE","POS_NN_OI_YI_II_CACHE","POS_NN_YH_STRUCTURE","POS_NN_YH_CACHE","ruleInflector","RuleInflector","firstNameInflector","FirstNameInflector","INFLECTION_RULES","middleNameInflector","MiddleNameInflector","lastNameInflector","LastNameInflector","AnthroponymInflector","process","env","_firstNameInflector","_middleNameInflector","_lastNameInflector","attributes","getFirstName","getGender","getMiddleName","getLastName","ruleUtil","rules","_ruleInflector","_rules","inflectionCaseName","namePart","filter","sort","_posRecognizer","isLastSegment","vowels","match","hasOneVowel","recognize","stringUtil","regExpUtil","regExp","modify","inflectionCases","modifiers","inflectedWord","replace","groups","replacer","maxIndex","countGroups","applyRuleModifier","append","value","modifierValue","modifier","getRuleModifiers","type","exec","applicable","structure","cache","_applicable","_neuralNetwork","NeuralNetwork","_cache","InMemoryCache","hasItem","run","setItem","getItem","synaptic","neuralNetworkUtil","samples","options","network","Architect","Perceptron","Trainer","train","toJSON","_network","Network","fromJSON","input","encodeInput","output","activate","decodeOutput","JSON","stringify","isValidPos","encodeOutput","keys","padStart","Math","round","posIndex","findIndex","posValue","items","_items","Map","forEach","key","set","get","has","delete"],"mappings":"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,wBAAwBa,QAAQC,GAAR,CAAYd,qBAA1C;AACA,IAAMC,sBAAsBhF,OAAOoB,MAAP,CAAcwE,QAAQC,GAAR,CAAYb,mBAA1B,CAA5B;AACA,IAAMC,kBAAkBW,GAAxB;;QAGEN,gB,GAAAA,gB;QACAX,qB,GAAAA,qB;QACAC,iB,GAAAA,iB;QACAE,yB,GAAAA,yB;QACAC,qB,GAAAA,qB;QACAC,mB,GAAAA,mB;QACAC,e,GAAAA,e;;;;;;;ACfF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4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","file":"shevchenko.cjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","/**\n * @abstract\n */\nexport default class AbstractName {\n  /**\n   * Creates a new compound name with the results of calling a provided function on every part in the original compound name.\n   *\n   * For example, the compound last name \"Нечуй-Левицький\" includes two parts \"Нечуй\" and \"Левицький\" divided by a delimiter \"-\".\n   * So the callback function will be called twice with values \"Нечуй\" and \"Левицький\".\n   *\n   * @param {function} transform\n   * @returns {AbstractName}\n   */\n  map(transform) {\n    const parts = this.toString().split('-');\n    const name = parts.map((part, index) => transform(part, index, parts.length)).join('-');\n    return new this.constructor(name);\n  }\n}\n","/**\n * @param {object} rule\n * @param {string} rule.gender\n * @param {Gender} gender\n * @returns {boolean}\n */\nexport function matchGender(rule, gender) {\n  return rule.gender.includes(gender.toString());\n}\n\n/**\n * @param {object} rule\n * @param {Array<string>} rule.usages\n * @param {string} usage\n * @param {boolean} [strict=false]\n * @returns {boolean}\n */\nexport function matchUsage(rule, usage, strict = false) {\n  if (rule.usages.length) {\n    return rule.usages.includes(usage);\n  }\n  return !strict;\n}\n\n/**\n * Matches the rule regular expression.\n *\n * @param {object} rule\n * @param {object} rule.regexp\n * @param {string} rule.regexp.find\n * @param {string} word\n * @returns {boolean}\n */\nexport function matchRegExp(rule, word) {\n  return new RegExp(rule.regexp.find, 'gim').test(word);\n}\n\n/**\n * @param {object} rule\n * @param {object} rule.pos\n * @param {string} pos\n * @returns {boolean}\n */\nexport function matchPos(rule, pos) {\n  if (pos === null) {\n    return true;\n  }\n  return rule.pos === pos;\n}\n\n/**\n * @param {object} firstRule\n * @param {Array<string>} firstRule.usages\n * @param {object} secondRule\n * @param {Array<string>} secondRule.usages\n * @param {string} usage\n * @returns {number}\n */\nexport function compareUsage(firstRule, secondRule, usage) {\n  return !firstRule.usages.length && secondRule.usages.length && secondRule.usages.includes(usage);\n}\n","import Gender from './Gender';\nimport FirstName from './FirstName';\nimport MiddleName from './MiddleName';\nimport LastName from './LastName';\n\nexport default class Anthroponym {\n  /**\n   * @param {Object} anthroponym\n   */\n  static validate(anthroponym) {\n    if (typeof anthroponym !== 'object' || anthroponym == null) {\n      throw new TypeError('Invalid anthroponym type. Allowed types: object.');\n    }\n\n    const hasFirstName = Object.prototype.hasOwnProperty.call(anthroponym, 'firstName');\n    const hasMiddleName = Object.prototype.hasOwnProperty.call(anthroponym, 'middleName');\n    const hasLastName = Object.prototype.hasOwnProperty.call(anthroponym, 'lastName');\n    if (!hasFirstName && !hasMiddleName && !hasLastName) {\n      throw new TypeError('Invalid anthroponym value.');\n    }\n\n    Gender.validate(anthroponym.gender);\n\n    if (hasFirstName) {\n      FirstName.validate(anthroponym.firstName);\n    }\n\n    if (hasMiddleName) {\n      MiddleName.validate(anthroponym.middleName);\n    }\n\n    if (hasLastName) {\n      LastName.validate(anthroponym.lastName);\n    }\n  }\n\n  /**\n   * @param {object} anthroponym\n   */\n  constructor(anthroponym) {\n    this.constructor.validate(anthroponym);\n\n    this._gender = new Gender(anthroponym.gender);\n    if (Object.prototype.hasOwnProperty.call(anthroponym, 'firstName')) {\n      this._firstName = new FirstName(anthroponym.firstName);\n    }\n    if (Object.prototype.hasOwnProperty.call(anthroponym, 'middleName')) {\n      this._middleName = new MiddleName(anthroponym.middleName);\n    }\n    if (Object.prototype.hasOwnProperty.call(anthroponym, 'lastName')) {\n      this._lastName = new LastName(anthroponym.lastName);\n    }\n  }\n\n  /**\n   * Casts the value to an object.\n   *\n   * @returns {object}\n   */\n  toObject() {\n    const object = {};\n    object.gender = this._gender.toString();\n    if (this.hasFirstName()) {\n      object.firstName = this._firstName.toString();\n    }\n    if (this.hasMiddleName()) {\n      object.middleName = this._middleName.toString();\n    }\n    if (this.hasLastName()) {\n      object.lastName = this._lastName.toString();\n    }\n    return object;\n  }\n\n  /**\n   * Determines whether the anthroponym has first name.\n   *\n   * @returns {boolean}\n   */\n  hasFirstName() {\n    return this._firstName != null;\n  }\n\n  /**\n   * Determines whether the anthroponym has middle name.\n   *\n   * @returns {boolean}\n   */\n  hasMiddleName() {\n    return this._middleName != null;\n  }\n\n  /**\n   * Determines whether the anthroponym has last name.\n   *\n   * @returns {boolean}\n   */\n  hasLastName() {\n    return this._lastName != null;\n  }\n\n  /**\n   * Retrieves first name.\n   *\n   * @returns {FirstName|null}\n   */\n  getFirstName() {\n    return this._firstName || null;\n  }\n\n  /**\n   * Retrieves middle name.\n   *\n   * @returns {MiddleName|null}\n   */\n  getMiddleName() {\n    return this._middleName || null;\n  }\n\n  /**\n   * Retrieves last name.\n   *\n   * @returns {LastName|null}\n   */\n  getLastName() {\n    return this._lastName || null;\n  }\n\n  /**\n   * Retrieves gender.\n   *\n   * @returns {Gender}\n   */\n  getGender() {\n    return this._gender;\n  }\n}\n","/**\n * Gender values.\n *\n * @readonly\n * @type {object}\n */\nexport const GENDERS = Object.freeze({\n  MALE: 'male',\n  FEMALE: 'female',\n});\n\nexport default class Gender {\n  /**\n   * @param {string} gender\n   */\n  static validate(gender) {\n    if (!Object.values(GENDERS).includes(gender)) {\n      const allowedValues = Object.values(GENDERS).join(', ');\n      throw new TypeError(`Invalid gender value. Allowed values: ${allowedValues}.`);\n    }\n  }\n\n  /**\n   * @param {string} gender\n   */\n  constructor(gender) {\n    this.constructor.validate(gender);\n    this._gender = gender;\n  }\n\n  /**\n   * @returns {string}\n   */\n  toString() {\n    return this._gender;\n  }\n\n  /**\n   * Determines whether gender value is male.\n   *\n   * @returns {boolean}\n   */\n  isMale() {\n    return this._gender === GENDERS.MALE;\n  }\n\n  /**\n   * Determines whether gender value is female.\n   *\n   * @returns {boolean}\n   */\n  isFemale() {\n    return this._gender === GENDERS.FEMALE;\n  }\n}\n","/**\n * Detects if a character is in the upper case at the specified index.\n *\n * @param {string} source\n * @param {number} pos The zero-based index of the desired character.\n */\nexport function isUpperCase(source, pos) {\n  return source.charAt(pos) === source.charAt(pos).toUpperCase();\n}\n\n/**\n * Detects if a character is in the lower case at the specified index.\n *\n * @param {string} source\n * @param {number} pos The zero-based index of the desired character.\n */\nexport function isLowerCase(source, pos) {\n  return source.charAt(pos) === source.charAt(pos).toLowerCase();\n}\n\n/**\n * Converts a string to a binary representation.\n *\n * @param {string} source\n * @returns {string}\n */\nexport function toBinary(source) {\n  return source\n    .split('')\n    .map((char) => char.charCodeAt(0).toString(2))\n    .join('');\n}\n\n/**\n * Applies the case mask of the source to the string.\n *\n * @param {string} source\n * @param {string} target\n * @returns {string}\n */\nexport function applyCaseMask(source, target) {\n  const toUpperCase = 'toUpperCase';\n  const toLowerCase = 'toLowerCase';\n  const toOriginalCase = 'toString';\n\n  const mask = source.split('').reduce((mask, char, pos) => {\n    if (isUpperCase(source, pos)) {\n      return [...mask, toUpperCase];\n    } else if (isLowerCase(source, pos)) {\n      return [...mask, toLowerCase];\n    } else {\n      return [...mask, toOriginalCase];\n    }\n  }, []);\n\n  return target.split('').reduce((result, char, pos) => {\n    const method = mask[pos] || mask[mask.length - 1] || toOriginalCase;\n    return result + target[pos][method]();\n  }, '');\n}\n","/**\n * Number of nodes for input layer.\n *\n * @type {number}\n */\nexport const NETWORK_LAYER_SIZE_INPUT = 360;\n\n/**\n * Number of nodes for hidden layer.\n *\n * @type {number}\n */\nexport const NETWORK_LAYER_SIZE_HIDDEN = 20;\n\n/**\n * Number of nodes for output layer.\n *\n * @type {number}\n */\nexport const NETWORK_LAYER_SIZE_OUTPUT = 1;\n\n/**\n * Preconfigured mapping for parts of speech.\n *\n * @readonly\n * @type {object}\n */\nexport const POS_MAPPING = Object.freeze({\n  noun: [0],\n  adjective: [1],\n});\n","import InflectionCase, { INFLECTION_CASES } from './valueObjects/InflectionCase';\nimport Anthroponym from './valueObjects/Anthroponym';\nimport { GENDERS } from './valueObjects/Gender';\nimport { anthroponymInflector } from './bootstrap';\n\n/**\n * Inflects the anthroponym.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n * @param {string} inflectionCase\n */\nfunction shevchenko(anthroponym, inflectionCase) {\n  return anthroponymInflector.inflect(new Anthroponym(anthroponym), new InflectionCase(inflectionCase)).toObject();\n}\n\n/**\n * Inflects the anthroponym in nominative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nexport function inNominative(anthroponym) {\n  return shevchenko(anthroponym, INFLECTION_CASES.NOMINATIVE);\n}\n\n/**\n * Inflects the anthroponym in genitive case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nexport function inGenitive(anthroponym) {\n  return shevchenko(anthroponym, INFLECTION_CASES.GENITIVE);\n}\n\n/**\n * Inflects the anthroponym in dative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nexport function inDative(anthroponym) {\n  return shevchenko(anthroponym, INFLECTION_CASES.DATIVE);\n}\n\n/**\n * Inflects the anthroponym in accusative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nexport function inAccusative(anthroponym) {\n  return shevchenko(anthroponym, INFLECTION_CASES.ACCUSATIVE);\n}\n\n/**\n * Inflects the anthroponym in ablative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nexport function inAblative(anthroponym) {\n  return shevchenko(anthroponym, INFLECTION_CASES.ABLATIVE);\n}\n\n/**\n * Inflects the anthroponym in locative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nexport function inLocative(anthroponym) {\n  return shevchenko(anthroponym, INFLECTION_CASES.LOCATIVE);\n}\n\n/**\n * Inflects the anthroponym in vocative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nexport function inVocative(anthroponym) {\n  return shevchenko(anthroponym, INFLECTION_CASES.VOCATIVE);\n}\n\n/**\n * Inflects the anthroponym in all cases.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nexport function inAll(anthroponym) {\n  return Object.values(INFLECTION_CASES).reduce((results, inflectionCase) => {\n    results[inflectionCase] = shevchenko(anthroponym, inflectionCase);\n    return results;\n  }, {});\n}\n\nexport { GENDERS, INFLECTION_CASES };\n\nshevchenko.inNominative = inNominative;\nshevchenko.inGenitive = inGenitive;\nshevchenko.inDative = inDative;\nshevchenko.inAccusative = inAccusative;\nshevchenko.inAblative = inAblative;\nshevchenko.inLocative = inLocative;\nshevchenko.inVocative = inVocative;\nshevchenko.inAll = inAll;\nshevchenko.GENDERS = GENDERS;\nshevchenko.INFLECTION_CASES = INFLECTION_CASES;\n\nexport default shevchenko;\n","/**\n * Inflection case values.\n *\n * @readonly\n * @type {object}\n */\nexport const INFLECTION_CASES = Object.freeze({\n  NOMINATIVE: 'nominative',\n  GENITIVE: 'genitive',\n  DATIVE: 'dative',\n  ACCUSATIVE: 'accusative',\n  ABLATIVE: 'ablative',\n  LOCATIVE: 'locative',\n  VOCATIVE: 'vocative',\n});\n\nexport default class InflectionCase {\n  /**\n   * @param {string} inflectionCase\n   */\n  static validate(inflectionCase) {\n    if (!Object.values(INFLECTION_CASES).includes(inflectionCase)) {\n      const allowedValues = Object.values(INFLECTION_CASES).join(', ');\n      throw new TypeError(`Invalid inflection case value. Allowed values: ${allowedValues}.`);\n    }\n  }\n\n  /**\n   * @param {string} inflectionCase\n   */\n  constructor(inflectionCase) {\n    this.constructor.validate(inflectionCase);\n    this._inflectionCase = inflectionCase;\n  }\n\n  /**\n   * @returns {string}\n   */\n  toString() {\n    return this._inflectionCase;\n  }\n}\n","import AbstractName from './AbstractName';\n\nexport default class FirstName extends AbstractName {\n  /**\n   * @param {string} firstName\n   */\n  static validate(firstName) {\n    if (typeof firstName !== 'string') {\n      throw new TypeError('Invalid first name type. Allowed types: string.');\n    }\n  }\n\n  /**\n   * @param {string} firstName\n   */\n  constructor(firstName) {\n    super();\n    this.constructor.validate(firstName);\n    this._firstName = firstName;\n  }\n\n  /**\n   * @returns {string}\n   */\n  toString() {\n    return this._firstName;\n  }\n}\n","import AbstractName from './AbstractName';\n\nexport default class MiddleName extends AbstractName {\n  /**\n   * @param {string} middleName\n   */\n  static validate(middleName) {\n    if (typeof middleName !== 'string') {\n      throw new TypeError('Invalid middle name type. Allowed types: string.');\n    }\n  }\n\n  /**\n   * @param {string} middleName\n   */\n  constructor(middleName) {\n    super();\n    this.constructor.validate(middleName);\n    this._middleName = middleName;\n  }\n\n  /**\n   * @returns {string}\n   */\n  toString() {\n    return this._middleName;\n  }\n}\n","import AbstractName from './AbstractName';\n\nexport default class LastName extends AbstractName {\n  /**\n   * @param {string} lastName\n   */\n  static validate(lastName) {\n    if (typeof lastName !== 'string') {\n      throw new TypeError('Invalid last name type. Allowed types: string.');\n    }\n  }\n\n  /**\n   * @param {string} lastName\n   */\n  constructor(lastName) {\n    super();\n    this.constructor.validate(lastName);\n    this._lastName = lastName;\n  }\n\n  /**\n   * @returns {string}\n   */\n  toString() {\n    return this._lastName;\n  }\n}\n","import {\n  INFLECTION_RULES,\n  POS_NN_A_YA_STRUCTURE,\n  POS_NN_A_YA_CACHE,\n  POS_NN_OI_YI_II_STRUCTURE,\n  POS_NN_OI_YI_II_CACHE,\n  POS_NN_YH_STRUCTURE,\n  POS_NN_YH_CACHE,\n} from './config';\nimport AnthroponymInflector from './services/inflector/AnthroponymInflector';\nimport FirstNameInflector from './services/inflector/FirstNameInflector';\nimport LastNameInflector from './services/inflector/LastNameInflector';\nimport MiddleNameInflector from './services/inflector/MiddleNameInflector';\nimport RuleInflector from './services/inflector/RuleInflector';\nimport Recognizer from './services/pos/Recognizer';\nimport RecognizerRule from './services/pos/RecognizerRule';\n\nconst posRecognizer = new Recognizer([\n  // The part of speech recognizer for female last names with endings \"-a\", \"-я\".\n  new RecognizerRule(\n    (word, gender) => gender.isFemale() && /[ая]$/i.test(word),\n    POS_NN_A_YA_STRUCTURE,\n    POS_NN_A_YA_CACHE,\n  ),\n  // The part of speech recognizer for male last names with endings \"-ой\", \"-ий\", \"-ій\".\n  new RecognizerRule(\n    (word, gender) => gender.isMale() && /(ой|ий|ій)$/i.test(word),\n    POS_NN_OI_YI_II_STRUCTURE,\n    POS_NN_OI_YI_II_CACHE,\n  ),\n  // The part of speech recognizer for male last names with endings \"-их\".\n  new RecognizerRule((word, gender) => gender.isMale() && /(их)$/i.test(word), POS_NN_YH_STRUCTURE, POS_NN_YH_CACHE),\n]);\n\nconst ruleInflector = new RuleInflector();\nconst firstNameInflector = new FirstNameInflector(ruleInflector, INFLECTION_RULES);\nconst middleNameInflector = new MiddleNameInflector(ruleInflector, INFLECTION_RULES);\nconst lastNameInflector = new LastNameInflector(ruleInflector, INFLECTION_RULES, posRecognizer);\n\nconst anthroponymInflector = new AnthroponymInflector(firstNameInflector, middleNameInflector, lastNameInflector);\n\nexport { anthroponymInflector };\n","const INFLECTION_RULES = process.env.INFLECTION_RULES;\nconst POS_NN_A_YA_STRUCTURE = Object.freeze(process.env.POS_NN_A_YA_STRUCTURE);\nconst POS_NN_A_YA_CACHE = process.env.POS_NN_A_YA_CACHE;\nconst POS_NN_OI_YI_II_STRUCTURE = Object.freeze(process.env.POS_NN_OI_YI_II_STRUCTURE);\nconst POS_NN_OI_YI_II_CACHE = process.env.POS_NN_OI_YI_II_CACHE;\nconst POS_NN_YH_STRUCTURE = Object.freeze(process.env.POS_NN_YH_STRUCTURE);\nconst POS_NN_YH_CACHE = process.env.POS_NN_YH_CACHE;\n\nexport {\n  INFLECTION_RULES,\n  POS_NN_A_YA_STRUCTURE,\n  POS_NN_A_YA_CACHE,\n  POS_NN_OI_YI_II_STRUCTURE,\n  POS_NN_OI_YI_II_CACHE,\n  POS_NN_YH_STRUCTURE,\n  POS_NN_YH_CACHE,\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import Anthroponym from '../../valueObjects/Anthroponym';\n\nexport default class AnthroponymInflector {\n  /**\n   * @param {FirstNameInflector} firstNameInflector\n   * @param {MiddleNameInflector} middleNameInflector\n   * @param {LastNameInflector} lastNameInflector\n   */\n  constructor(firstNameInflector, middleNameInflector, lastNameInflector) {\n    this._firstNameInflector = firstNameInflector;\n    this._middleNameInflector = middleNameInflector;\n    this._lastNameInflector = lastNameInflector;\n  }\n\n  /**\n   * Inflects the anthroponym first, last and middle names.\n   *\n   * @param {Anthroponym} anthroponym\n   * @param {InflectionCase} inflectionCase\n   * @returns {Anthroponym}\n   */\n  inflect(anthroponym, inflectionCase) {\n    const attributes = {};\n\n    if (anthroponym.hasFirstName()) {\n      attributes.firstName = this._firstNameInflector\n        .inflect(anthroponym.getFirstName(), anthroponym.getGender(), inflectionCase)\n        .toString();\n    }\n\n    if (anthroponym.hasMiddleName()) {\n      attributes.middleName = this._middleNameInflector\n        .inflect(anthroponym.getMiddleName(), anthroponym.getGender(), inflectionCase)\n        .toString();\n    }\n\n    if (anthroponym.hasLastName()) {\n      attributes.lastName = this._lastNameInflector\n        .inflect(anthroponym.getLastName(), anthroponym.getGender(), inflectionCase)\n        .toString();\n    }\n\n    return new Anthroponym({ ...attributes, gender: anthroponym.getGender().toString() });\n  }\n}\n","import * as ruleUtil from './ruleUtil';\n\nexport default class FirstNameInflector {\n  /**\n   * @param {RuleInflector} ruleInflector\n   * @param {Array} rules\n   */\n  constructor(ruleInflector, rules) {\n    this._ruleInflector = ruleInflector;\n    this._rules = rules;\n  }\n\n  /**\n   * Inflects a first name.\n   *\n   * @param {FirstName} firstName\n   * @param {Gender} gender\n   * @param {InflectionCase} inflectionCaseName\n   * @returns {FirstName}\n   */\n  inflect(firstName, gender, inflectionCaseName) {\n    return firstName.map((namePart) => {\n      // Get the most suitable inflection rule.\n      const [rule] = this._rules\n        .filter(\n          (rule) =>\n            ruleUtil.matchGender(rule, gender) &&\n            ruleUtil.matchUsage(rule, 'firstName') &&\n            ruleUtil.matchRegExp(rule, namePart),\n        )\n        .sort((firstRule, secondRule) => ruleUtil.compareUsage(firstRule, secondRule, 'firstName'));\n\n      if (rule == null) {\n        return namePart;\n      }\n\n      return this._ruleInflector.inflect(namePart, inflectionCaseName, rule);\n    });\n  }\n}\n","import * as ruleUtil from './ruleUtil';\n\nexport default class LastNameInflector {\n  /**\n   * @param {RuleInflector} ruleInflector\n   * @param {Array} rules\n   * @param {Recognizer} posRecognizer\n   */\n  constructor(ruleInflector, rules, posRecognizer) {\n    this._ruleInflector = ruleInflector;\n    this._rules = rules;\n    this._posRecognizer = posRecognizer;\n  }\n\n  /**\n   * Inflects a last name.\n   *\n   * @param {LastName} lastName\n   * @param {Gender} gender\n   * @param {InflectionCase} inflectionCaseName\n   * @returns {LastName}\n   */\n  inflect(lastName, gender, inflectionCaseName) {\n    return lastName.map((namePart, index, length) => {\n      // If the first (on practice, not the last) short part of the compound last name has only one vowel,\n      // it is not perceived as an independent surname and returned \"as is\".\n      const isLastSegment = index === length - 1;\n      const vowels = namePart.match(/(а|о|у|е|и|і|я|ю|є|ї)/gim);\n      const hasOneVowel = vowels && vowels.length === 1;\n      if (!isLastSegment && hasOneVowel) {\n        return namePart;\n      }\n\n      // Get the most suitable inflection rule.\n      const [rule] = this._rules\n        .filter(\n          (rule) =>\n            ruleUtil.matchGender(rule, gender) &&\n            ruleUtil.matchUsage(rule, 'lastName') &&\n            ruleUtil.matchRegExp(rule, namePart) &&\n            ruleUtil.matchPos(rule, this._posRecognizer.recognize(namePart, gender)),\n        )\n        .sort((firstRule, secondRule) => ruleUtil.compareUsage(firstRule, secondRule, 'lastName'));\n\n      if (rule == null) {\n        return namePart;\n      }\n\n      return this._ruleInflector.inflect(namePart, inflectionCaseName, rule);\n    });\n  }\n}\n","import * as ruleUtil from './ruleUtil';\n\nexport default class MiddleNameInflector {\n  /**\n   * @param {RuleInflector} ruleInflector\n   * @param {Array} rules\n   */\n  constructor(ruleInflector, rules) {\n    this._ruleInflector = ruleInflector;\n    this._rules = rules;\n  }\n\n  /**\n   * Inflects a middle name.\n   *\n   * @param {MiddleName} middleName\n   * @param {Gender} gender\n   * @param {InflectionCase} inflectionCaseName\n   * @returns {MiddleName}\n   */\n  inflect(middleName, gender, inflectionCaseName) {\n    return middleName.map((namePart) => {\n      // Get the most suitable inflection rule.\n      const [rule] = this._rules\n        .filter(\n          (rule) =>\n            ruleUtil.matchGender(rule, gender) &&\n            ruleUtil.matchUsage(rule, 'middleName', true) &&\n            ruleUtil.matchRegExp(rule, namePart),\n        )\n        .sort((firstRule, secondRule) => ruleUtil.compareUsage(firstRule, secondRule, 'middleName'));\n\n      if (rule == null) {\n        return namePart;\n      }\n\n      return this._ruleInflector.inflect(namePart, inflectionCaseName, rule);\n    });\n  }\n}\n","import * as stringUtil from '../../util/stringUtil';\nimport * as regExpUtil from '../../util/regExpUtil';\n\nexport default class RuleInflector {\n  /**\n   * Retrieves the inflection rule modifier functions.\n   *\n   * @returns {object}\n   * @private\n   */\n  static getRuleModifiers() {\n    return Object.freeze({\n      append: (value, modifierValue) => value + modifierValue,\n      replace: (value, modifierValue) => modifierValue,\n    });\n  }\n\n  /**\n   * Applies the inflection rule modifier to the value.\n   *\n   * @param {object} modifier\n   * @param {string} modifier.type\n   * @param {string} modifier.value\n   * @param {string} value\n   * @returns {string}\n   * @private\n   */\n  static applyRuleModifier(modifier, value) {\n    if (modifier != null) {\n      const modify = this.getRuleModifiers()[modifier.type];\n      if (modify != null) {\n        return modify(value, modifier.value);\n      }\n    }\n    return value;\n  }\n\n  /**\n   * Inflects a word by the inflection rule.\n   *\n   * @param {string} word\n   * @param {InflectionCase} inflectionCase\n   * @param {object} rule\n   * @param {object} rule.regexp\n   * @param {string} rule.regexp.modify\n   * @param {string} rule.inflectionCases\n   * @returns {string}\n   */\n  inflect(word, inflectionCase, rule) {\n    const regExp = rule.regexp.modify;\n    const [modifiers] = rule.inflectionCases[inflectionCase.toString()];\n    if (modifiers != null) {\n      const inflectedWord = word.replace(new RegExp(regExp, 'gmi'), (match, ...groups) => {\n        let replacer = '';\n        const maxIndex = regExpUtil.countGroups(regExp);\n        for (let index = 0; index < maxIndex; index++) {\n          replacer += this.constructor.applyRuleModifier(modifiers[index], groups[index]);\n        }\n        return replacer;\n      });\n      return stringUtil.applyCaseMask(word, inflectedWord);\n    }\n    return word;\n  }\n}\n","/**\n * Counts a number of groups in a regular expression.\n *\n * @param {RegExp|string} regExp\n * @returns {number}\n */\nexport function countGroups(regExp) {\n  return new RegExp(regExp.toString() + '|').exec('').length - 1;\n}\n","export default class Recognizer {\n  /**\n   * @param {Array<RecognizerRule>} rules\n   */\n  constructor(rules) {\n    this._rules = rules;\n  }\n\n  /**\n   * Recognizes the part of speech of the word.\n   *\n   * @param {string} word\n   * @param {Gender} gender\n   * @returns {string|null} - Recognized part of speech or null if no applicable rule was found.\n   */\n  recognize(word, gender) {\n    const rule = this._rules.find((rule) => rule.applicable(word, gender));\n    if (rule == null) {\n      return null;\n    }\n    return rule.recognize(word, gender);\n  }\n}\n","import NeuralNetwork from './NeuralNetwork';\nimport InMemoryCache from '../../util/InMemoryCache';\n\nexport default class RecognizerRule {\n  /**\n   * @param {function} applicable\n   * @param {object} structure\n   * @param {object} [cache]\n   */\n  constructor(applicable, structure, cache = {}) {\n    this._applicable = applicable;\n    this._neuralNetwork = new NeuralNetwork(structure);\n    this._cache = new InMemoryCache(cache);\n  }\n\n  /**\n   * Determines whether the part of speech recognizer rule is applicable or not.\n   *\n   * @param {string} word\n   * @param {Gender} gender\n   * @returns {boolean}\n   */\n  applicable(word, gender) {\n    return this._applicable(word, gender);\n  }\n\n  /**\n   * Recognizes part of speech of the word.\n   *\n   * @param {string} word\n   * @param {Gender} gender\n   */\n  recognize(word, gender) {\n    if (!this._cache.hasItem(word)) {\n      const pos = this._neuralNetwork.run(word);\n      this._cache.setItem(word, pos);\n    }\n    return this._cache.getItem(word);\n  }\n}\n","import * as synaptic from 'synaptic';\nimport { NETWORK_LAYER_SIZE_INPUT, NETWORK_LAYER_SIZE_HIDDEN, NETWORK_LAYER_SIZE_OUTPUT } from './config';\nimport * as neuralNetworkUtil from './neuralNetworkUtil';\n\n/**\n * @classdesc Part of speech recognition neural network based on three-layer perceptron.\n */\nexport default class NeuralNetwork {\n  /**\n   * Builds the neural network on the training data.\n   *\n   * @param {Array<object>} samples\n   * @param {object} options\n   * @returns {NeuralNetwork}\n   */\n  static build(samples, options) {\n    const network = new synaptic.Architect.Perceptron(\n      NETWORK_LAYER_SIZE_INPUT,\n      NETWORK_LAYER_SIZE_HIDDEN,\n      NETWORK_LAYER_SIZE_OUTPUT,\n    );\n    new synaptic.Trainer(network).train(samples, options);\n    return new this(network.toJSON());\n  }\n\n  /**\n   * @param {object} structure\n   */\n  constructor(structure) {\n    this._network = synaptic.Network.fromJSON(structure);\n  }\n\n  /**\n   * Trains the neural network on the training data samples.\n   *\n   * @param {Array<object>} samples\n   * @param {object} options\n   * @returns {NeuralNetwork}\n   */\n  train(samples, options) {\n    new synaptic.Trainer(this._network).train(samples, options);\n    return this;\n  }\n\n  /**\n   * Runs the neural network on the input data.\n   *\n   * @param {string} input\n   * @returns {string|null}\n   */\n  run(input) {\n    const value = neuralNetworkUtil.encodeInput(input);\n    const output = this._network.activate(value);\n    return neuralNetworkUtil.decodeOutput(output);\n  }\n\n  /**\n   * @returns {string}\n   */\n  toString() {\n    return JSON.stringify(this._network.toJSON());\n  }\n}\n","module.exports = require(\"synaptic\");","import * as stringUtil from '../../util/stringUtil';\nimport { POS_MAPPING, NETWORK_LAYER_SIZE_INPUT } from './config';\n\n/**\n * Determines if provided value is a valid part of speech value.\n *\n * @param {string} value\n * @returns {boolean}\n */\nexport function isValidPos(value) {\n  return Object.keys(POS_MAPPING).includes(value);\n}\n\n/**\n * Encodes word value for usage in the neural network.\n *\n * @param {string} input\n * @returns {Array<string>}\n */\nexport function encodeInput(input) {\n  return stringUtil\n    .toBinary(input)\n    .padStart(NETWORK_LAYER_SIZE_INPUT, '0')\n    .split('');\n}\n\n/**\n * Encodes part of speech value for usage in the neural network.\n *\n * @param {string} output\n * @returns {Array<number>|undefined}\n */\nexport function encodeOutput(output) {\n  return POS_MAPPING[output];\n}\n\n/**\n * Decodes part of speech value returned from the neural network.\n *\n * @param {Array<number>} output\n * @returns {string|null}\n */\nexport function decodeOutput(output) {\n  const value = output.map((value) => Math.round(value));\n  const posIndex = Object.values(POS_MAPPING).findIndex((posValue) => posValue.join('') === value.join(''));\n  return Object.keys(POS_MAPPING)[posIndex] || null;\n}\n","export default class InMemoryCache {\n  /**\n   * @param {object} [items]\n   */\n  constructor(items = {}) {\n    this._items = new Map();\n    Object.keys(items).forEach((key) => this.setItem(key, items[key]));\n  }\n\n  /**\n   * Sets the value for the key in the cache object.\n   *\n   * @param {*} key\n   * @param {*} value\n   * @returns {void}\n   */\n  setItem(key, value) {\n    this._items.set(key, value);\n  }\n\n  /**\n   * Retrieves the value associated to the key, or undefined if there is none.\n   *\n   * @param {*} key\n   * @returns {*}\n   */\n  getItem(key) {\n    return this._items.get(key);\n  }\n\n  /**\n   * Returns a boolean asserting whether a value has been associated to the key in the cache object or not.\n   *\n   * @param {*} key\n   * @returns {boolean}\n   */\n  hasItem(key) {\n    return this._items.has(key);\n  }\n\n  /**\n   * Deletes the value associated to the key.\n   *\n   * @param {*} key\n   * @returns {void}\n   */\n  deleteItem(key) {\n    this._items.delete(key);\n  }\n}\n"],"sourceRoot":""}