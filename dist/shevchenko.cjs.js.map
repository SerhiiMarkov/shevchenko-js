{"version":3,"sources":["webpack://shevchenko/webpack/bootstrap","webpack://shevchenko/./src/models/validate.js","webpack://shevchenko/./src/models/Gender.js","webpack://shevchenko/./src/models/AbstractName.js","webpack://shevchenko/./src/services/inflector/ruleUtil.js","webpack://shevchenko/./src/models/InflectionCase.js","webpack://shevchenko/./src/models/Anthroponym.js","webpack://shevchenko/./src/services/util/stringUtil.js","webpack://shevchenko/./src/services/pos/nn/config.js","webpack://shevchenko/./src/api.js","webpack://shevchenko/./src/models/FirstName.js","webpack://shevchenko/./src/models/MiddleName.js","webpack://shevchenko/./src/models/LastName.js","webpack://shevchenko/./src/bootstrap.js","webpack://shevchenko/./src/config.js","webpack://shevchenko/./node_modules/process/browser.js","webpack://shevchenko/./src/services/inflector/AnthroponymInflector.js","webpack://shevchenko/./src/services/inflector/FirstNameInflector.js","webpack://shevchenko/./src/services/inflector/LastNameInflector.js","webpack://shevchenko/./src/services/inflector/MiddleNameInflector.js","webpack://shevchenko/./src/services/inflector/RuleInflector.js","webpack://shevchenko/./src/services/util/regExpUtil.js","webpack://shevchenko/./src/services/pos/PosRecognizer.js","webpack://shevchenko/./src/services/pos/PosRecognizerRule.js","webpack://shevchenko/./src/services/pos/nn/NeuralNetwork.js","webpack://shevchenko/external \"synaptic\"","webpack://shevchenko/./src/services/pos/nn/neuralNetworkUtil.js","webpack://shevchenko/./src/services/util/InMemoryCache.js"],"names":["genderValue","inflectionCaseValue","firstNameValue","middleNameValue","lastNameValue","anthroponymValue","gender","allowedValues","Object","values","GENDERS","isAllowedValue","includes","TypeError","join","inflectionCase","INFLECTION_CASES","firstName","isAllowedType","middleName","lastName","anthroponym","hasFirstName","prototype","hasOwnProperty","call","hasMiddleName","hasLastName","freeze","MALE","FEMALE","Gender","validate","_gender","toString","bind","isMale","isFemale","AbstractName","map","func","parts","split","name","part","index","length","constructor","matchGender","matchUsage","matchRegExp","matchPos","compareUsage","rule","usage","strict","usages","word","RegExp","regexp","find","test","pos","firstRule","secondRule","NOMINATIVE","GENITIVE","DATIVE","ACCUSATIVE","ABLATIVE","LOCATIVE","VOCATIVE","InflectionCase","_inflectionCase","Anthroponym","_anthroponym","toObject","getFirstName","getMiddleName","getLastName","getGender","reduce","value","attribute","FirstName","ReferenceError","MiddleName","LastName","isUpperCase","isLowerCase","toBinary","padLeft","applyCaseMask","char","toUpperCase","toLowerCase","string","charCodeAt","symbol","filler","Array","substring","exampleString","UPPER_CASE","LOWER_CASE","NOT_RECOGNIZED_CASE","caseMask","mask","push","result","charMask","NETWORK_LAYER_SIZE_INPUT","NETWORK_LAYER_SIZE_HIDDEN","NETWORK_LAYER_SIZE_OUTPUT","POS_MAPPING","noun","adjective","shevchenko","anthroponymInflector","inflect","inNominative","inGenitive","inDative","inAccusative","inAblative","inLocative","inVocative","inAll","results","_firstName","_middleName","_lastName","posRecognizer","PosRecognizer","PosRecognizerRule","POS_NN_A_YA_STRUCTURE","POS_NN_A_YA_CACHE","POS_NN_OI_YI_II_STRUCTURE","POS_NN_OI_YI_II_CACHE","POS_NN_YH_STRUCTURE","POS_NN_YH_CACHE","ruleInflector","RuleInflector","firstNameInflector","FirstNameInflector","INFLECTION_RULES","middleNameInflector","MiddleNameInflector","lastNameInflector","LastNameInflector","AnthroponymInflector","process","env","_firstNameInflector","_middleNameInflector","_lastNameInflector","attributes","ruleUtil","rules","_ruleInflector","_rules","inflectionCaseName","namePart","filter","sort","_posRecognizer","isLastSegment","vowels","match","hasOneVowel","recognize","stringUtil","regExpUtil","_applyRuleModifier","_getRuleModifiers","modifier","modify","type","append","modifierValue","replace","regExp","inflectionCases","modifiers","searchValue","inflectedValue","groups","replacer","count","countGroups","exec","isApplicable","structure","cache","_isApplicable","_neuralNetwork","NeuralNetwork","_cache","InMemoryCache","hasItem","run","setItem","getItem","synaptic","neuralNetworkUtil","_network","Network","fromJSON","train","build","samples","options","Trainer","network","Architect","Perceptron","toJSON","input","encodeInput","output","activate","decodeOutput","JSON","stringify","isValidPos","encodeOutput","keys","Number","posIndex","findIndex","posValue","items","_items","Map","forEach","key","deleteItem","set","get","has","delete"],"mappings":"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QACAC,iB,GAAAA,iB;QACAC,yB,GAAAA,yB;QACAC,qB,GAAAA,qB;QACAC,mB,GAAAA,mB;QACAC,e,GAAAA,e;;;;;;;ACfF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;;;;;;;ACvLtC;;;;;;;;IAEqBU,oB;AACnB;;;;;AAKA,gCAAYP,kBAAZ,EAAgCG,mBAAhC,EAAqDE,iBAArD,EAAwE;AAAA;;AACtE,SAAKK,mBAAL,GAA2BV,kBAA3B;AACA,SAAKW,oBAAL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","file":"shevchenko.cjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","import {INFLECTION_CASES} from './InflectionCase';\nimport {GENDERS} from './Gender';\n\n/**\n * Validate gender value.\n *\n * @param {*} gender\n * @return {void}\n * @throws {TypeError}\n */\nexport function genderValue(gender) {\n  const allowedValues = Object.values(GENDERS);\n  const isAllowedValue = allowedValues.includes(gender);\n  if (!isAllowedValue) {\n    throw new TypeError(`Invalid gender value. Allowed values: ${allowedValues.join(', ')}.`);\n  }\n}\n\n/**\n * Validate inflection case value.\n *\n * @param {*} inflectionCase\n * @return {void}\n * @throws {TypeError}\n */\nexport function inflectionCaseValue(inflectionCase) {\n  const allowedValues = Object.values(INFLECTION_CASES);\n  const isAllowedValue = allowedValues.includes(inflectionCase);\n  if (!isAllowedValue) {\n    throw new TypeError(`Invalid inflection case value. Allowed values: ${allowedValues.join(', ')}.`);\n  }\n}\n\n/**\n * Validate first name value.\n *\n * @param {*} firstName\n * @return {void}\n * @throws {TypeError}\n */\nexport function firstNameValue(firstName) {\n  const isAllowedType = typeof firstName === 'string';\n  if (!isAllowedType) {\n    throw new TypeError('Invalid first name type. Allowed types: string.');\n  }\n}\n\n/**\n * Validate middle name value.\n *\n * @param {*} middleName\n * @return {void}\n * @throws {TypeError}\n */\nexport function middleNameValue(middleName) {\n  const isAllowedType = typeof middleName === 'string';\n  if (!isAllowedType) {\n    throw new TypeError('Invalid middle name type. Allowed types: string.');\n  }\n}\n\n/**\n * Validate last name value.\n *\n * @param {*} lastName\n * @return {void}\n * @throws {TypeError}\n */\nexport function lastNameValue(lastName) {\n  const isAllowedType = typeof lastName === 'string';\n  if (!isAllowedType) {\n    throw new TypeError('Invalid last name type. Allowed types: string.');\n  }\n}\n\n/**\n * Validate anthroponym value.\n *\n * @param {*} anthroponym\n * @return {void}\n * @throws {TypeError}\n */\nexport function anthroponymValue(anthroponym) {\n  const isAllowedType = typeof anthroponym === 'object' && anthroponym !== null;\n  if (!isAllowedType) {\n    throw new TypeError('Invalid anthroponym type. Allowed types: object.');\n  }\n\n  const hasFirstName = Object.prototype.hasOwnProperty.call(anthroponym, 'firstName');\n  const hasMiddleName = Object.prototype.hasOwnProperty.call(anthroponym, 'middleName');\n  const hasLastName = Object.prototype.hasOwnProperty.call(anthroponym, 'lastName');\n  if (!hasFirstName && !hasMiddleName && !hasLastName) {\n    throw new TypeError('Invalid anthroponym value.');\n  }\n\n  genderValue(anthroponym.gender);\n\n  if (hasFirstName) {\n    firstNameValue(anthroponym.firstName);\n  }\n\n  if (hasMiddleName) {\n    middleNameValue(anthroponym.middleName);\n  }\n\n  if (hasLastName) {\n    lastNameValue(anthroponym.lastName);\n  }\n}\n\nexport default {genderValue, inflectionCaseValue, firstNameValue, middleNameValue, lastNameValue, anthroponymValue};\n","import validate from './validate';\n\n/**\n * Gender values.\n *\n * @readonly\n * @type {object}\n */\nexport const GENDERS = Object.freeze({\n  MALE: 'male',\n  FEMALE: 'female',\n});\n\nexport default class Gender {\n  /**\n   * @param {string} gender\n   */\n  constructor(gender) {\n    validate.genderValue(gender);\n    this._gender = gender;\n    this.toString = this.toString.bind(this);\n    this.isMale = this.isMale.bind(this);\n    this.isFemale = this.isFemale.bind(this);\n  }\n\n  /**\n   * @return {string}\n   */\n  toString() {\n    return this._gender;\n  }\n\n  /**\n   * Determine whether gender value is male.\n   *\n   * @return {boolean}\n   */\n  isMale() {\n    return this.toString() === GENDERS.MALE;\n  }\n\n  /**\n   * Determine whether gender value is female.\n   *\n   * @return {boolean}\n   */\n  isFemale() {\n    return this.toString() === GENDERS.FEMALE;\n  }\n}\n","/**\n * @abstract\n */\nexport default class AbstractName {\n  /**\n   */\n  constructor() {\n    this.map = this.map.bind(this);\n  }\n\n  /**\n   * Create a new compound name with the results of calling a provided function on every part in the original compound name.\n   *\n   * For example, the compound last name \"Нечуй-Левицький\" includes two parts \"Нечуй\" and \"Левицький\" divided by a delimiter \"-\".\n   * So the callback function will be called twice with values \"Нечуй\" and \"Левицький\".\n   *\n   * @param {function} func\n   * @return {AbstractName}\n   */\n  map(func) {\n    const parts = this.toString().split('-');\n    const name = parts.map((part, index) => func(part, index, parts.length)).join('-');\n    return new this.constructor(name);\n  }\n}\n","/**\n * @param {object} rule\n * @param {string} rule.gender\n * @param {Gender} gender\n * @return {boolean}\n */\nexport function matchGender(rule, gender) {\n  return rule.gender.includes(gender.toString());\n}\n\n/**\n * @param {object} rule\n * @param {Array<string>} rule.usages\n * @param {string} usage\n * @param {boolean} [strict=false]\n * @return {boolean}\n */\nexport function matchUsage(rule, usage, strict = false) {\n  if (rule.usages.length) {\n    return rule.usages.includes(usage);\n  }\n  return !strict;\n}\n\n/**\n * Match rule regular expression.\n *\n * @param {object} rule\n * @param {object} rule.regexp\n * @param {string} rule.regexp.find\n * @param {string} word\n * @return {boolean}\n */\nexport function matchRegExp(rule, word) {\n  return new RegExp(rule.regexp.find, 'gim').test(word);\n}\n\n/**\n * @param {object} rule\n * @param {object} rule.pos\n * @param {string} pos\n * @return {boolean}\n */\nexport function matchPos(rule, pos) {\n  if (pos === null) {\n    return true;\n  }\n  return rule.pos === pos;\n}\n\n/**\n * @param {object} firstRule\n * @param {Array<string>} firstRule.usages\n * @param {object} secondRule\n * @param {Array<string>} secondRule.usages\n * @param {string} usage\n * @return {number}\n */\nexport function compareUsage(firstRule, secondRule, usage) {\n  return !firstRule.usages.length && secondRule.usages.length && secondRule.usages.includes(usage);\n}\n","import validate from './validate';\n\n/**\n * Inflection case values.\n *\n * @readonly\n * @type {object}\n */\nexport const INFLECTION_CASES = Object.freeze({\n  NOMINATIVE: 'nominative',\n  GENITIVE: 'genitive',\n  DATIVE: 'dative',\n  ACCUSATIVE: 'accusative',\n  ABLATIVE: 'ablative',\n  LOCATIVE: 'locative',\n  VOCATIVE: 'vocative',\n});\n\nexport default class InflectionCase {\n  /**\n   * @param {string} inflectionCase\n   */\n  constructor(inflectionCase) {\n    validate.inflectionCaseValue(inflectionCase);\n    this._inflectionCase = inflectionCase;\n    this.toString = this.toString.bind(this);\n  }\n\n  /**\n   * @return {string}\n   */\n  toString() {\n    return this._inflectionCase;\n  }\n}\n","import Gender from './Gender';\nimport FirstName from './FirstName';\nimport MiddleName from './MiddleName';\nimport LastName from './LastName';\nimport validate from './validate';\n\nexport default class Anthroponym {\n  /**\n   * @param {object} anthroponym\n   */\n  constructor(anthroponym) {\n    validate.anthroponymValue(anthroponym);\n    this._anthroponym = {};\n    this._anthroponym.gender = anthroponym.gender;\n\n    const hasFirstName = Object.prototype.hasOwnProperty.call(anthroponym, 'firstName');\n    if (hasFirstName) {\n      this._anthroponym.firstName = anthroponym.firstName;\n    }\n\n    const hasMiddleName = Object.prototype.hasOwnProperty.call(anthroponym, 'middleName');\n    if (hasMiddleName) {\n      this._anthroponym.middleName = anthroponym.middleName;\n    }\n\n    const hasLastName = Object.prototype.hasOwnProperty.call(anthroponym, 'lastName');\n    if (hasLastName) {\n      this._anthroponym.lastName = anthroponym.lastName;\n    }\n\n    this.toString = this.toString.bind(this);\n    this.toObject = this.toObject.bind(this);\n    this.hasFirstName = this.hasFirstName.bind(this);\n    this.hasMiddleName = this.hasMiddleName.bind(this);\n    this.hasLastName = this.hasLastName.bind(this);\n    this.getFirstName = this.getFirstName.bind(this);\n    this.getMiddleName = this.getMiddleName.bind(this);\n    this.getLastName = this.getLastName.bind(this);\n    this.getGender = this.getGender.bind(this);\n  }\n\n  /**\n   * @return {string}\n   */\n  toString() {\n    return Object.values(this._anthroponym).reduce((value, attribute) => `${value} ${attribute}`, '');\n  }\n\n  /**\n   * Cast the value to an object.\n   *\n   * @return {object}\n   */\n  toObject() {\n    return {...this._anthroponym};\n  }\n\n  /**\n   * Determine whether the anthroponym has first name.\n   *\n   * @return {boolean}\n   */\n  hasFirstName() {\n    return Object.prototype.hasOwnProperty.call(this._anthroponym, 'firstName');\n  }\n\n  /**\n   * Determine whether the anthroponym has middle name.\n   *\n   * @return {boolean}\n   */\n  hasMiddleName() {\n    return Object.prototype.hasOwnProperty.call(this._anthroponym, 'middleName');\n  }\n\n  /**\n   * Determine whether the anthroponym has last name.\n   *\n   * @return {boolean}\n   */\n  hasLastName() {\n    return Object.prototype.hasOwnProperty.call(this._anthroponym, 'lastName');\n  }\n\n  /**\n   * Get first name.\n   *\n   * @return {FirstName}\n   * @throws {ReferenceError}\n   */\n  getFirstName() {\n    if (this.hasFirstName()) {\n      return new FirstName(this._anthroponym.firstName);\n    }\n    throw new ReferenceError('First name is not defined.');\n  }\n\n  /**\n   * Get middle name.\n   *\n   * @return {MiddleName}\n   * @throws {ReferenceError}\n   */\n  getMiddleName() {\n    if (this.hasMiddleName()) {\n      return new MiddleName(this._anthroponym.middleName);\n    }\n    throw new ReferenceError('Middle name is not defined.');\n  }\n\n  /**\n   * Get last name.\n   *\n   * @return {LastName}\n   * @throws {ReferenceError}\n   */\n  getLastName() {\n    if (this.hasLastName()) {\n      return new LastName(this._anthroponym.lastName);\n    }\n    throw new ReferenceError('Last name is not defined.');\n  }\n\n  /**\n   * Get gender.\n   *\n   * @return {Gender}\n   */\n  getGender() {\n    return new Gender(this._anthroponym.gender);\n  }\n}\n","/**\n * Detect if a character is in the upper case.\n *\n * @param {string} char\n */\nexport function isUpperCase(char) {\n  return char === char.toUpperCase() && char !== char.toLowerCase();\n}\n\n/**\n * Detect if a character is in the lower case.\n *\n * @param {string} char\n */\nexport function isLowerCase(char) {\n  return char === char.toLowerCase() && char !== char.toUpperCase();\n}\n\n/**\n * Convert a string to a binary representation.\n *\n * @param {string} string\n * @return {string}\n */\nexport function toBinary(string) {\n  return string\n    .split('')\n    .map((char) => char.charCodeAt(0).toString(2))\n    .join('');\n}\n\n/**\n * Fill the left part of the string with a symbol to a given length.\n *\n * @param {string} string\n * @param {number} length\n * @param {string} symbol\n * @return {string}\n */\nexport function padLeft(string, length, symbol = '0') {\n  const filler = new Array(length + 1).join(symbol);\n  return filler.substring(0, filler.length - string.length) + string;\n}\n\n/**\n * Apply the case mask of the example string to the string.\n *\n * @param {string} exampleString\n * @param {string} string\n * @return {string}\n */\nexport function applyCaseMask(exampleString, string) {\n  const UPPER_CASE = 'u';\n  const LOWER_CASE = 'l';\n  const NOT_RECOGNIZED_CASE = null;\n\n  // Create case mask from the example string.\n  const caseMask = exampleString.split('').reduce((mask, char) => {\n    if (isUpperCase(char)) {\n      mask.push(UPPER_CASE);\n    } else if (isLowerCase(char)) {\n      mask.push(LOWER_CASE);\n    } else {\n      mask.push(NOT_RECOGNIZED_CASE);\n    }\n    return mask;\n  }, []);\n\n  // Apply case mask to the desired string.\n  return string.split('').reduce((result, char, index) => {\n    let charMask = caseMask[index];\n    if (typeof charMask === 'undefined' && caseMask.length !== 0) {\n      charMask = caseMask[caseMask.length - 1];\n    }\n    if (charMask === UPPER_CASE) {\n      char = char.toUpperCase();\n    } else if (charMask === LOWER_CASE) {\n      char = char.toLowerCase();\n    }\n    return result + char;\n  }, '');\n}\n","/**\n * Number of nodes for input layer.\n *\n * @type {number}\n */\nexport const NETWORK_LAYER_SIZE_INPUT = 360;\n\n/**\n * Number of nodes for hidden layer.\n *\n * @type {number}\n */\nexport const NETWORK_LAYER_SIZE_HIDDEN = 20;\n\n/**\n * Number of nodes for output layer.\n *\n * @type {number}\n */\nexport const NETWORK_LAYER_SIZE_OUTPUT = 1;\n\n/**\n * Preconfigured mapping for parts of speech.\n *\n * @readonly\n * @type {object}\n */\nexport const POS_MAPPING = Object.freeze({\n  noun: [0],\n  adjective: [1],\n});\n","import InflectionCase from './models/InflectionCase';\nimport {INFLECTION_CASES} from './models/InflectionCase';\nimport Anthroponym from './models/Anthroponym';\nimport {GENDERS} from './models/Gender';\nimport {anthroponymInflector} from './bootstrap';\n\n/**\n * Inflect the anthroponym.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n * @param {string} inflectionCase\n */\nfunction shevchenko(anthroponym, inflectionCase) {\n  return anthroponymInflector.inflect(new Anthroponym(anthroponym), new InflectionCase(inflectionCase)).toObject();\n}\n\n/**\n * Inflect the anthroponym in nominative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inNominative(anthroponym) {\n  return shevchenko(anthroponym, INFLECTION_CASES.NOMINATIVE);\n}\n\n/**\n * Inflect the anthroponym in genitive case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inGenitive(anthroponym) {\n  return shevchenko(anthroponym, INFLECTION_CASES.GENITIVE);\n}\n\n/**\n * Inflect the anthroponym in dative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inDative(anthroponym) {\n  return shevchenko(anthroponym, INFLECTION_CASES.DATIVE);\n}\n\n/**\n * Inflect the anthroponym in accusative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inAccusative(anthroponym) {\n  return shevchenko(anthroponym, INFLECTION_CASES.ACCUSATIVE);\n}\n\n/**\n * Inflect the anthroponym in ablative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inAblative(anthroponym) {\n  return shevchenko(anthroponym, INFLECTION_CASES.ABLATIVE);\n}\n\n/**\n * Inflect the anthroponym in locative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inLocative(anthroponym) {\n  return shevchenko(anthroponym, INFLECTION_CASES.LOCATIVE);\n}\n\n/**\n * Inflect the anthroponym in vocative case.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inVocative(anthroponym) {\n  return shevchenko(anthroponym, INFLECTION_CASES.VOCATIVE);\n}\n\n/**\n * Inflect the anthroponym in all cases.\n *\n * @param {object} anthroponym\n * @param {string} anthroponym.firstName\n * @param {string} anthroponym.lastName\n * @param {string} anthroponym.middleName\n * @param {string} anthroponym.gender\n */\nfunction inAll(anthroponym) {\n  return Object.values(INFLECTION_CASES).reduce((results, inflectionCase) => {\n    results[inflectionCase] = shevchenko(anthroponym, inflectionCase);\n    return results;\n  }, {});\n}\n\nexport {\n  inNominative,\n  inGenitive,\n  inDative,\n  inAccusative,\n  inAblative,\n  inLocative,\n  inVocative,\n  inAll,\n  GENDERS,\n  INFLECTION_CASES,\n};\n\nshevchenko.inNominative = inNominative;\nshevchenko.inGenitive = inGenitive;\nshevchenko.inDative = inDative;\nshevchenko.inAccusative = inAccusative;\nshevchenko.inAblative = inAblative;\nshevchenko.inLocative = inLocative;\nshevchenko.inVocative = inVocative;\nshevchenko.inAll = inAll;\nshevchenko.GENDERS = GENDERS;\nshevchenko.INFLECTION_CASES = INFLECTION_CASES;\n\nexport default shevchenko;\n","import AbstractName from './AbstractName';\nimport validate from './validate';\n\nexport default class FirstName extends AbstractName {\n  /**\n   * @param {string} firstName\n   */\n  constructor(firstName) {\n    super();\n    validate.firstNameValue(firstName);\n    this._firstName = firstName;\n    this.toString = this.toString.bind(this);\n  }\n\n  /**\n   * @return {string}\n   */\n  toString() {\n    return this._firstName;\n  }\n}\n","import AbstractName from './AbstractName';\nimport validate from './validate';\n\nexport default class MiddleName extends AbstractName {\n  /**\n   * @param {string} middleName\n   */\n  constructor(middleName) {\n    super();\n    validate.middleNameValue(middleName);\n    this._middleName = middleName;\n    this.toString = this.toString.bind(this);\n  }\n\n  /**\n   * @return {string}\n   */\n  toString() {\n    return this._middleName;\n  }\n}\n","import AbstractName from './AbstractName';\nimport validate from './validate';\n\nexport default class LastName extends AbstractName {\n  /**\n   * @param {string} lastName\n   */\n  constructor(lastName) {\n    super();\n    validate.lastNameValue(lastName);\n    this._lastName = lastName;\n    this.toString = this.toString.bind(this);\n  }\n\n  /**\n   * @return {string}\n   */\n  toString() {\n    return this._lastName;\n  }\n}\n","import {\n  INFLECTION_RULES,\n  POS_NN_A_YA_STRUCTURE,\n  POS_NN_A_YA_CACHE,\n  POS_NN_OI_YI_II_STRUCTURE,\n  POS_NN_OI_YI_II_CACHE,\n  POS_NN_YH_STRUCTURE,\n  POS_NN_YH_CACHE,\n} from './config';\nimport AnthroponymInflector from './services/inflector/AnthroponymInflector';\nimport FirstNameInflector from './services/inflector/FirstNameInflector';\nimport LastNameInflector from './services/inflector/LastNameInflector';\nimport MiddleNameInflector from './services/inflector/MiddleNameInflector';\nimport RuleInflector from './services/inflector/RuleInflector';\nimport PosRecognizer from './services/pos/PosRecognizer';\nimport PosRecognizerRule from './services/pos/PosRecognizerRule';\n\nconst posRecognizer = new PosRecognizer([\n  // The part of speech recognizer for female last names with endings \"-a\", \"-я\".\n  new PosRecognizerRule(\n    (word, gender) => gender.isFemale() && /(а|я)$/.test(word),\n    POS_NN_A_YA_STRUCTURE,\n    POS_NN_A_YA_CACHE,\n  ),\n  // The part of speech recognizer for male last names with endings \"-ой\", \"-ий\", \"-ій\".\n  new PosRecognizerRule(\n    (word, gender) => gender.isMale() && /(ой|ий|ій)$/.test(word),\n    POS_NN_OI_YI_II_STRUCTURE,\n    POS_NN_OI_YI_II_CACHE,\n  ),\n  // The part of speech recognizer for male last names with endings \"-их\".\n  new PosRecognizerRule((word, gender) => gender.isMale() && /(их)$/.test(word), POS_NN_YH_STRUCTURE, POS_NN_YH_CACHE),\n]);\n\nconst ruleInflector = new RuleInflector();\nconst firstNameInflector = new FirstNameInflector(ruleInflector, INFLECTION_RULES);\nconst middleNameInflector = new MiddleNameInflector(ruleInflector, INFLECTION_RULES);\nconst lastNameInflector = new LastNameInflector(ruleInflector, INFLECTION_RULES, posRecognizer);\n\nconst anthroponymInflector = new AnthroponymInflector(firstNameInflector, middleNameInflector, lastNameInflector);\n\nexport {anthroponymInflector};\n","const INFLECTION_RULES = process.env.INFLECTION_RULES;\nconst POS_NN_A_YA_STRUCTURE = Object.freeze(process.env.POS_NN_A_YA_STRUCTURE);\nconst POS_NN_A_YA_CACHE = process.env.POS_NN_A_YA_CACHE;\nconst POS_NN_OI_YI_II_STRUCTURE = Object.freeze(process.env.POS_NN_OI_YI_II_STRUCTURE);\nconst POS_NN_OI_YI_II_CACHE = process.env.POS_NN_OI_YI_II_CACHE;\nconst POS_NN_YH_STRUCTURE = Object.freeze(process.env.POS_NN_YH_STRUCTURE);\nconst POS_NN_YH_CACHE = process.env.POS_NN_YH_CACHE;\n\nexport {\n  INFLECTION_RULES,\n  POS_NN_A_YA_STRUCTURE,\n  POS_NN_A_YA_CACHE,\n  POS_NN_OI_YI_II_STRUCTURE,\n  POS_NN_OI_YI_II_CACHE,\n  POS_NN_YH_STRUCTURE,\n  POS_NN_YH_CACHE,\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import Anthroponym from '../../models/Anthroponym';\n\nexport default class AnthroponymInflector {\n  /**\n   * @param {FirstNameInflector} firstNameInflector\n   * @param {MiddleNameInflector} middleNameInflector\n   * @param {LastNameInflector} lastNameInflector\n   */\n  constructor(firstNameInflector, middleNameInflector, lastNameInflector) {\n    this._firstNameInflector = firstNameInflector;\n    this._middleNameInflector = middleNameInflector;\n    this._lastNameInflector = lastNameInflector;\n    this.inflect = this.inflect.bind(this);\n  }\n\n  /**\n   * Inflect the anthroponym first, last and middle names.\n   *\n   * @param {Anthroponym} anthroponym\n   * @param {InflectionCase} inflectionCase\n   * @return {Anthroponym}\n   */\n  inflect(anthroponym, inflectionCase) {\n    const attributes = {};\n\n    if (anthroponym.hasFirstName()) {\n      attributes.firstName = this._firstNameInflector\n        .inflect(anthroponym.getFirstName(), anthroponym.getGender(), inflectionCase)\n        .toString();\n    }\n\n    if (anthroponym.hasMiddleName()) {\n      attributes.middleName = this._middleNameInflector\n        .inflect(anthroponym.getMiddleName(), anthroponym.getGender(), inflectionCase)\n        .toString();\n    }\n\n    if (anthroponym.hasLastName()) {\n      attributes.lastName = this._lastNameInflector\n        .inflect(anthroponym.getLastName(), anthroponym.getGender(), inflectionCase)\n        .toString();\n    }\n\n    return new Anthroponym({...attributes, gender: anthroponym.getGender().toString()});\n  }\n}\n","import * as ruleUtil from './ruleUtil';\n\nexport default class FirstNameInflector {\n  /**\n   * @param {RuleInflector} ruleInflector\n   * @param {Array} rules\n   */\n  constructor(ruleInflector, rules) {\n    this._ruleInflector = ruleInflector;\n    this._rules = rules;\n    this.inflect = this.inflect.bind(this);\n  }\n\n  /**\n   * Inflect a first name.\n   *\n   * @param {FirstName} firstName\n   * @param {Gender} gender\n   * @param {InflectionCase} inflectionCaseName\n   * @return {FirstName}\n   */\n  inflect(firstName, gender, inflectionCaseName) {\n    return firstName.map((namePart) => {\n      // Get the most suitable inflection rule.\n      const [rule] = this._rules\n        .filter(\n          (rule) =>\n            ruleUtil.matchGender(rule, gender) &&\n            ruleUtil.matchUsage(rule, 'firstName') &&\n            ruleUtil.matchRegExp(rule, namePart),\n        )\n        .sort((firstRule, secondRule) => ruleUtil.compareUsage(firstRule, secondRule, 'firstName'));\n\n      if (rule == null) {\n        return namePart;\n      }\n\n      return this._ruleInflector.inflect(namePart, inflectionCaseName, rule);\n    });\n  }\n}\n","import * as ruleUtil from './ruleUtil';\n\nexport default class LastNameInflector {\n  /**\n   * @param {RuleInflector} ruleInflector\n   * @param {Array} rules\n   * @param {PosRecognizer} posRecognizer\n   */\n  constructor(ruleInflector, rules, posRecognizer) {\n    this._ruleInflector = ruleInflector;\n    this._rules = rules;\n    this._posRecognizer = posRecognizer;\n    this.inflect = this.inflect.bind(this);\n  }\n\n  /**\n   * Inflect a last name.\n   *\n   * @param {LastName} lastName\n   * @param {Gender} gender\n   * @param {InflectionCase} inflectionCaseName\n   * @return {LastName}\n   */\n  inflect(lastName, gender, inflectionCaseName) {\n    return lastName.map((namePart, index, length) => {\n      // If the first (on practice, not the last) short part of the compound last name has only one vowel,\n      // it is not perceived as an independent surname and returned \"as is\".\n      const isLastSegment = index === length - 1;\n      const vowels = namePart.match(/(а|о|у|е|и|і|я|ю|є|ї)/gim);\n      const hasOneVowel = vowels && vowels.length === 1;\n      if (!isLastSegment && hasOneVowel) {\n        return namePart;\n      }\n\n      // Get the most suitable inflection rule.\n      const [rule] = this._rules\n        .filter(\n          (rule) =>\n            ruleUtil.matchGender(rule, gender) &&\n            ruleUtil.matchUsage(rule, 'lastName') &&\n            ruleUtil.matchRegExp(rule, namePart) &&\n            ruleUtil.matchPos(rule, this._posRecognizer.recognize(namePart, gender)),\n        )\n        .sort((firstRule, secondRule) => ruleUtil.compareUsage(firstRule, secondRule, 'lastName'));\n\n      if (rule == null) {\n        return namePart;\n      }\n\n      return this._ruleInflector.inflect(namePart, inflectionCaseName, rule);\n    });\n  }\n}\n","import * as ruleUtil from './ruleUtil';\n\nexport default class MiddleNameInflector {\n  /**\n   * @param {RuleInflector} ruleInflector\n   * @param {Array} rules\n   */\n  constructor(ruleInflector, rules) {\n    this._ruleInflector = ruleInflector;\n    this._rules = rules;\n    this.inflect = this.inflect.bind(this);\n  }\n\n  /**\n   * Inflect a middle name.\n   *\n   * @param {MiddleName} middleName\n   * @param {Gender} gender\n   * @param {InflectionCase} inflectionCaseName\n   * @return {MiddleName}\n   */\n  inflect(middleName, gender, inflectionCaseName) {\n    return middleName.map((namePart) => {\n      // Get the most suitable inflection rule.\n      const [rule] = this._rules\n        .filter(\n          (rule) =>\n            ruleUtil.matchGender(rule, gender) &&\n            ruleUtil.matchUsage(rule, 'middleName', true) &&\n            ruleUtil.matchRegExp(rule, namePart),\n        )\n        .sort((firstRule, secondRule) => ruleUtil.compareUsage(firstRule, secondRule, 'middleName'));\n\n      if (rule == null) {\n        return namePart;\n      }\n\n      return this._ruleInflector.inflect(namePart, inflectionCaseName, rule);\n    });\n  }\n}\n","import * as stringUtil from '../util/stringUtil';\nimport * as regExpUtil from '../util/regExpUtil';\n\nexport default class RuleInflector {\n  /**\n   */\n  constructor() {\n    this._applyRuleModifier = this._applyRuleModifier.bind(this);\n    this._getRuleModifiers = this._getRuleModifiers.bind(this);\n    this.inflect = this.inflect.bind(this);\n  }\n\n  /**\n   * Apply the inflection rule modifier to the value.\n   *\n   * @param {object} modifier\n   * @param {string} modifier.type\n   * @param {string} modifier.value\n   * @param {string} value\n   * @return {*}\n   * @private\n   */\n  _applyRuleModifier(modifier, value) {\n    if (typeof modifier === 'object') {\n      const modify = this._getRuleModifiers()[modifier.type];\n      if (typeof modify === 'function') {\n        return modify(value, modifier.value);\n      }\n    }\n    return value;\n  }\n\n  /**\n   * Get an inflection rule modifier functions.\n   *\n   * @return {object}\n   * @private\n   */\n  _getRuleModifiers() {\n    return Object.freeze({\n      append: (value, modifierValue) => value + modifierValue,\n      replace: (value, modifierValue) => modifierValue,\n    });\n  }\n\n  /**\n   * Inflect a word by the inflection rule.\n   *\n   * @param {string} word\n   * @param {InflectionCase} inflectionCase\n   * @param {object} rule\n   * @param {object} rule.regexp\n   * @param {string} rule.regexp.modify\n   * @param {string} rule.inflectionCases\n   * @return {string}\n   */\n  inflect(word, inflectionCase, rule) {\n    const regExp = rule.regexp.modify;\n    const [modifiers] = rule.inflectionCases[inflectionCase.toString()];\n    if (typeof modifiers === 'object') {\n      const searchValue = new RegExp(regExp, 'gm');\n      const inflectedValue = word.toLowerCase().replace(searchValue, (match, ...groups) => {\n        let replacer = '';\n        const count = regExpUtil.countGroups(regExp);\n        for (let index = 0; index < count; index++) {\n          replacer += this._applyRuleModifier(modifiers[index], groups[index]);\n        }\n        return replacer;\n      });\n      return stringUtil.applyCaseMask(word, inflectedValue);\n    }\n    return word;\n  }\n}\n","/**\n * Count a number of groups in a regular expression.\n *\n * @param {RegExp|string} regExp\n * @return {number}\n */\nexport function countGroups(regExp) {\n  return new RegExp(`${regExp}|`).exec('').length - 1;\n}\n","export default class PosRecognizer {\n  /**\n   * @param {Array<PosRecognizerRule>} rules\n   */\n  constructor(rules) {\n    this._rules = rules;\n    this.recognize = this.recognize.bind(this);\n  }\n\n  /**\n   * Recognize the part of speech of the word.\n   *\n   * @param {string} word\n   * @param {Gender} gender\n   * @return {string|null} - Recognized part of speech or null if no applicable rule was found.\n   */\n  recognize(word, gender) {\n    const rule = this._rules.find((rule) => rule.isApplicable(word, gender));\n    if (rule == null) {\n      return null;\n    }\n    return rule.recognize(word, gender);\n  }\n}\n","import NeuralNetwork from './nn/NeuralNetwork';\nimport InMemoryCache from '../util/InMemoryCache';\n\nexport default class PosRecognizerRule {\n  /**\n   * @param {function} isApplicable\n   * @param {object} structure\n   * @param {object} [cache]\n   */\n  constructor(isApplicable, structure, cache = {}) {\n    this._isApplicable = isApplicable;\n    this._neuralNetwork = new NeuralNetwork(structure);\n    this._cache = new InMemoryCache(cache);\n    this.isApplicable = this.isApplicable.bind(this);\n    this.recognize = this.recognize.bind(this);\n  }\n\n  /**\n   * Test if the part of speech recognizer step is applicable.\n   *\n   * @param {string} word\n   * @param {Gender} gender\n   * @return {boolean}\n   */\n  isApplicable(word, gender) {\n    return this._isApplicable(word, gender);\n  }\n\n  /**\n   * Recognize part of speech of the word.\n   *\n   * @param {string} word\n   * @param {Gender} gender\n   */\n  recognize(word, gender) {\n    if (!this._cache.hasItem(word)) {\n      const pos = this._neuralNetwork.run(word);\n      this._cache.setItem(word, pos);\n    }\n    return this._cache.getItem(word);\n  }\n}\n","import * as synaptic from 'synaptic';\nimport {NETWORK_LAYER_SIZE_INPUT, NETWORK_LAYER_SIZE_HIDDEN, NETWORK_LAYER_SIZE_OUTPUT} from './config';\nimport * as neuralNetworkUtil from './neuralNetworkUtil';\n\n/**\n * @classdesc Neural network based on three-layer perceptron and used for the part of speech recognizing.\n */\nexport default class NeuralNetwork {\n  /**\n   * @param {object} structure\n   */\n  constructor(structure) {\n    this._network = synaptic.Network.fromJSON(structure);\n    this.train = this.train.bind(this);\n    this.build = this.build.bind(this);\n    this.run = this.run.bind(this);\n    this.toString = this.toString.bind(this);\n    this.toString = this.toString.bind(this);\n  }\n\n  /**\n   * Train the neural network on the training data samples.\n   *\n   * @param {Array<object>} samples\n   * @param {object} options\n   * @return {void}\n   */\n  train(samples, options) {\n    new synaptic.Trainer(this._network).train(samples, options);\n  }\n\n  /**\n   * Build the neural network on the training data array.\n   *\n   * @param {Array<object>} samples\n   * @param {object} options\n   * @return {NeuralNetwork}\n   */\n  build(samples, options) {\n    const network = new synaptic.Architect.Perceptron(\n      NETWORK_LAYER_SIZE_INPUT,\n      NETWORK_LAYER_SIZE_HIDDEN,\n      NETWORK_LAYER_SIZE_OUTPUT,\n    );\n    new synaptic.Trainer(network).train(samples, options);\n    return new NeuralNetwork(network.toJSON());\n  }\n\n  /**\n   * Run the neural network on the input data.\n   *\n   * @param {string} input\n   * @return {string|null}\n   */\n  run(input) {\n    const value = neuralNetworkUtil.encodeInput(input);\n    const output = this._network.activate(value);\n    return neuralNetworkUtil.decodeOutput(output);\n  }\n\n  /**\n   * @return {string}\n   */\n  toString() {\n    return JSON.stringify(this._network.toJSON());\n  }\n}\n","module.exports = require(\"synaptic\");","import * as stringUtil from '../../util/stringUtil';\nimport {POS_MAPPING, NETWORK_LAYER_SIZE_INPUT} from './config';\n\n/**\n * Determine if provided value is a valid part of speech value.\n *\n * @param {string} value\n * @return {boolean}\n */\nexport function isValidPos(value) {\n  return Object.keys(POS_MAPPING).includes(value);\n}\n\n/**\n * Encode word value for usage in the neural network.\n *\n * @param {string} input\n * @return {Array<string>}\n */\nexport function encodeInput(input) {\n  return stringUtil.padLeft(stringUtil.toBinary(input), NETWORK_LAYER_SIZE_INPUT).split('');\n}\n\n/**\n * Encode part of speech value for usage in the neural network.\n *\n * @param {string} output\n * @return {Array<number>|undefined}\n */\nexport function encodeOutput(output) {\n  return POS_MAPPING[output];\n}\n\n/**\n * Decode part of speech value returned from the neural network.\n *\n * @param {Array<number>} output\n * @return {string|null}\n */\nexport function decodeOutput(output) {\n  // Neural network output is an array of values in 0..1 range.\n  // We'll need to convert these values to integer values.\n  // If value greater than or equal to 0.5 - convert to 1.\n  // If value less than 0.5 - convert to 0.\n  const value = output.map((value) => Number(value >= 0.5));\n  const posIndex = Object.values(POS_MAPPING).findIndex((posValue) => posValue.join('') === value.join(''));\n  return Object.keys(POS_MAPPING)[posIndex] || null;\n}\n","export default class InMemoryCache {\n  /**\n   * @param {object} [items]\n   */\n  constructor(items = {}) {\n    this._items = new Map();\n    Object.keys(items).forEach((key) => this.setItem(key, items[key]));\n    this.setItem = this.setItem.bind(this);\n    this.getItem = this.getItem.bind(this);\n    this.hasItem = this.hasItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  /**\n   * Set the value for the key in the cache object.\n   *\n   * @param {*} key\n   * @param {*} value\n   * @return {void}\n   */\n  setItem(key, value) {\n    this._items.set(key, value);\n  }\n\n  /**\n   * Get the value associated to the key, or undefined if there is none.\n   *\n   * @param {*} key\n   * @return {*}\n   */\n  getItem(key) {\n    return this._items.get(key);\n  }\n\n  /**\n   * Return a boolean asserting whether a value has been associated to the key in the cache object or not.\n   *\n   * @param {*} key\n   * @return {boolean}\n   */\n  hasItem(key) {\n    return this._items.has(key);\n  }\n\n  /**\n   * Delete the value associated to the key.\n   *\n   * @param {*} key\n   * @return {void}\n   */\n  deleteItem(key) {\n    this._items.delete(key);\n  }\n}\n"],"sourceRoot":""}